syntax = "proto3";
package pb;

import "base.proto";

option go_package = "api/pb";

service OrgSvc {
  rpc CreateObjective(ObjectiveRequest) returns (StateReply) {}
  rpc GetObjective(ObjectiveRequest) returns (ObjectiveReply) {}
  rpc GetObjectives(ObjectiveRequest) returns (ObjectivesReply) {}
  rpc DeleteObjective(ObjectiveRequest) returns (StateReply) {}
  rpc CreateKeyResult(KeyResultRequest) returns (StateReply) {}
  rpc GetKeyResult(KeyResultRequest) returns (KeyResultReply) {}
  rpc GetKeyResults(KeyResultRequest) returns (KeyResultsReply) {}
  rpc DeleteKeyResult(KeyResultRequest) returns (StateReply) {}
}

message Objective {
  // @inject_tag: db:"id"
  int64 id = 1;
  // @inject_tag: db:"name"
  string name = 2;
  string tag = 3;
  // @inject_tag: db:"tag_id"
  int64 tagId = 4;
  // @inject_tag: db:"created_at"
  string createdAt = 5;
}

message KeyResult {
  // @inject_tag: db:"id"
  int64 id = 1;
  // @inject_tag: db:"name"
  string name = 2;
  // @inject_tag: db:"objective_id"
  int64 objectiveId = 3;
  string tag = 4;
  // @inject_tag: db:"tag_id"
  int64 tagId = 5;
  // @inject_tag: db:"complete"
  bool complete = 6;
  // @inject_tag: db:"created_at"
  string createdAt = 7;
  // @inject_tag: db:"updated_at"
  string updatedAt = 8;
}

message ObjectiveRequest {
  Objective objective = 1;
}

message ObjectiveReply {
  Objective objective = 1;
}

message ObjectivesReply {
  repeated Objective objective = 1;
}

message KeyResultRequest {
  KeyResult keyResult = 1;
}

message KeyResultReply {
  KeyResult keyResult = 1;
}

message KeyResultsReply {
  repeated KeyResult result = 1;
}
