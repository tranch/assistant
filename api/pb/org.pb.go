// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: org.proto

package pb

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Objective struct {
	// @inject_tag: db:"id" gorm:"primaryKey"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" db:"id" gorm:"primaryKey"`
	// @inject_tag: db:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" db:"name"`
	// @inject_tag: db:"tag_id"
	TagId int64 `protobuf:"varint,4,opt,name=tagId,proto3" json:"tagId,omitempty" db:"tag_id"`
	// @inject_tag: db:"created_at"
	CreatedAt int64 `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty" db:"created_at"`
	// @inject_tag: db:"updated_at"
	UpdatedAt int64 `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty" db:"updated_at"`
}

func (m *Objective) Reset()         { *m = Objective{} }
func (m *Objective) String() string { return proto.CompactTextString(m) }
func (*Objective) ProtoMessage()    {}
func (*Objective) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccb462779e28924f, []int{0}
}
func (m *Objective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Objective.Unmarshal(m, b)
}
func (m *Objective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Objective.Marshal(b, m, deterministic)
}
func (m *Objective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Objective.Merge(m, src)
}
func (m *Objective) XXX_Size() int {
	return xxx_messageInfo_Objective.Size(m)
}
func (m *Objective) XXX_DiscardUnknown() {
	xxx_messageInfo_Objective.DiscardUnknown(m)
}

var xxx_messageInfo_Objective proto.InternalMessageInfo

func (m *Objective) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Objective) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Objective) GetTagId() int64 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *Objective) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Objective) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type KeyResult struct {
	// @inject_tag: db:"id" gorm:"primaryKey"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" db:"id" gorm:"primaryKey"`
	// @inject_tag: db:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" db:"name"`
	// @inject_tag: db:"objective_id"
	ObjectiveId int64 `protobuf:"varint,3,opt,name=objectiveId,proto3" json:"objectiveId,omitempty" db:"objective_id"`
	// @inject_tag: db:"tag_id"
	TagId int64 `protobuf:"varint,5,opt,name=tagId,proto3" json:"tagId,omitempty" db:"tag_id"`
	// @inject_tag: db:"complete"
	Complete bool `protobuf:"varint,6,opt,name=complete,proto3" json:"complete,omitempty" db:"complete"`
	// @inject_tag: db:"created_at"
	CreatedAt int64 `protobuf:"varint,7,opt,name=createdAt,proto3" json:"createdAt,omitempty" db:"created_at"`
	// @inject_tag: db:"updated_at"
	UpdatedAt int64 `protobuf:"varint,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty" db:"updated_at"`
}

func (m *KeyResult) Reset()         { *m = KeyResult{} }
func (m *KeyResult) String() string { return proto.CompactTextString(m) }
func (*KeyResult) ProtoMessage()    {}
func (*KeyResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccb462779e28924f, []int{1}
}
func (m *KeyResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyResult.Unmarshal(m, b)
}
func (m *KeyResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyResult.Marshal(b, m, deterministic)
}
func (m *KeyResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyResult.Merge(m, src)
}
func (m *KeyResult) XXX_Size() int {
	return xxx_messageInfo_KeyResult.Size(m)
}
func (m *KeyResult) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyResult.DiscardUnknown(m)
}

var xxx_messageInfo_KeyResult proto.InternalMessageInfo

func (m *KeyResult) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *KeyResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *KeyResult) GetObjectiveId() int64 {
	if m != nil {
		return m.ObjectiveId
	}
	return 0
}

func (m *KeyResult) GetTagId() int64 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *KeyResult) GetComplete() bool {
	if m != nil {
		return m.Complete
	}
	return false
}

func (m *KeyResult) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *KeyResult) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type ObjectiveRequest struct {
	Objective *Objective `protobuf:"bytes,1,opt,name=objective,proto3" json:"objective,omitempty"`
}

func (m *ObjectiveRequest) Reset()         { *m = ObjectiveRequest{} }
func (m *ObjectiveRequest) String() string { return proto.CompactTextString(m) }
func (*ObjectiveRequest) ProtoMessage()    {}
func (*ObjectiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccb462779e28924f, []int{2}
}
func (m *ObjectiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectiveRequest.Unmarshal(m, b)
}
func (m *ObjectiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectiveRequest.Marshal(b, m, deterministic)
}
func (m *ObjectiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectiveRequest.Merge(m, src)
}
func (m *ObjectiveRequest) XXX_Size() int {
	return xxx_messageInfo_ObjectiveRequest.Size(m)
}
func (m *ObjectiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectiveRequest proto.InternalMessageInfo

func (m *ObjectiveRequest) GetObjective() *Objective {
	if m != nil {
		return m.Objective
	}
	return nil
}

type ObjectiveReply struct {
	Objective *Objective `protobuf:"bytes,1,opt,name=objective,proto3" json:"objective,omitempty"`
}

func (m *ObjectiveReply) Reset()         { *m = ObjectiveReply{} }
func (m *ObjectiveReply) String() string { return proto.CompactTextString(m) }
func (*ObjectiveReply) ProtoMessage()    {}
func (*ObjectiveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccb462779e28924f, []int{3}
}
func (m *ObjectiveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectiveReply.Unmarshal(m, b)
}
func (m *ObjectiveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectiveReply.Marshal(b, m, deterministic)
}
func (m *ObjectiveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectiveReply.Merge(m, src)
}
func (m *ObjectiveReply) XXX_Size() int {
	return xxx_messageInfo_ObjectiveReply.Size(m)
}
func (m *ObjectiveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectiveReply.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectiveReply proto.InternalMessageInfo

func (m *ObjectiveReply) GetObjective() *Objective {
	if m != nil {
		return m.Objective
	}
	return nil
}

type ObjectivesReply struct {
	Objective []*Objective `protobuf:"bytes,1,rep,name=objective,proto3" json:"objective,omitempty"`
}

func (m *ObjectivesReply) Reset()         { *m = ObjectivesReply{} }
func (m *ObjectivesReply) String() string { return proto.CompactTextString(m) }
func (*ObjectivesReply) ProtoMessage()    {}
func (*ObjectivesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccb462779e28924f, []int{4}
}
func (m *ObjectivesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectivesReply.Unmarshal(m, b)
}
func (m *ObjectivesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectivesReply.Marshal(b, m, deterministic)
}
func (m *ObjectivesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectivesReply.Merge(m, src)
}
func (m *ObjectivesReply) XXX_Size() int {
	return xxx_messageInfo_ObjectivesReply.Size(m)
}
func (m *ObjectivesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectivesReply.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectivesReply proto.InternalMessageInfo

func (m *ObjectivesReply) GetObjective() []*Objective {
	if m != nil {
		return m.Objective
	}
	return nil
}

type KeyResultRequest struct {
	KeyResult *KeyResult `protobuf:"bytes,1,opt,name=keyResult,proto3" json:"keyResult,omitempty"`
}

func (m *KeyResultRequest) Reset()         { *m = KeyResultRequest{} }
func (m *KeyResultRequest) String() string { return proto.CompactTextString(m) }
func (*KeyResultRequest) ProtoMessage()    {}
func (*KeyResultRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccb462779e28924f, []int{5}
}
func (m *KeyResultRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyResultRequest.Unmarshal(m, b)
}
func (m *KeyResultRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyResultRequest.Marshal(b, m, deterministic)
}
func (m *KeyResultRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyResultRequest.Merge(m, src)
}
func (m *KeyResultRequest) XXX_Size() int {
	return xxx_messageInfo_KeyResultRequest.Size(m)
}
func (m *KeyResultRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyResultRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeyResultRequest proto.InternalMessageInfo

func (m *KeyResultRequest) GetKeyResult() *KeyResult {
	if m != nil {
		return m.KeyResult
	}
	return nil
}

type KeyResultReply struct {
	KeyResult *KeyResult `protobuf:"bytes,1,opt,name=keyResult,proto3" json:"keyResult,omitempty"`
}

func (m *KeyResultReply) Reset()         { *m = KeyResultReply{} }
func (m *KeyResultReply) String() string { return proto.CompactTextString(m) }
func (*KeyResultReply) ProtoMessage()    {}
func (*KeyResultReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccb462779e28924f, []int{6}
}
func (m *KeyResultReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyResultReply.Unmarshal(m, b)
}
func (m *KeyResultReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyResultReply.Marshal(b, m, deterministic)
}
func (m *KeyResultReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyResultReply.Merge(m, src)
}
func (m *KeyResultReply) XXX_Size() int {
	return xxx_messageInfo_KeyResultReply.Size(m)
}
func (m *KeyResultReply) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyResultReply.DiscardUnknown(m)
}

var xxx_messageInfo_KeyResultReply proto.InternalMessageInfo

func (m *KeyResultReply) GetKeyResult() *KeyResult {
	if m != nil {
		return m.KeyResult
	}
	return nil
}

type KeyResultsReply struct {
	Result []*KeyResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (m *KeyResultsReply) Reset()         { *m = KeyResultsReply{} }
func (m *KeyResultsReply) String() string { return proto.CompactTextString(m) }
func (*KeyResultsReply) ProtoMessage()    {}
func (*KeyResultsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ccb462779e28924f, []int{7}
}
func (m *KeyResultsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyResultsReply.Unmarshal(m, b)
}
func (m *KeyResultsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyResultsReply.Marshal(b, m, deterministic)
}
func (m *KeyResultsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyResultsReply.Merge(m, src)
}
func (m *KeyResultsReply) XXX_Size() int {
	return xxx_messageInfo_KeyResultsReply.Size(m)
}
func (m *KeyResultsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyResultsReply.DiscardUnknown(m)
}

var xxx_messageInfo_KeyResultsReply proto.InternalMessageInfo

func (m *KeyResultsReply) GetResult() []*KeyResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*Objective)(nil), "pb.Objective")
	proto.RegisterType((*KeyResult)(nil), "pb.KeyResult")
	proto.RegisterType((*ObjectiveRequest)(nil), "pb.ObjectiveRequest")
	proto.RegisterType((*ObjectiveReply)(nil), "pb.ObjectiveReply")
	proto.RegisterType((*ObjectivesReply)(nil), "pb.ObjectivesReply")
	proto.RegisterType((*KeyResultRequest)(nil), "pb.KeyResultRequest")
	proto.RegisterType((*KeyResultReply)(nil), "pb.KeyResultReply")
	proto.RegisterType((*KeyResultsReply)(nil), "pb.KeyResultsReply")
}

func init() { proto.RegisterFile("org.proto", fileDescriptor_ccb462779e28924f) }

var fileDescriptor_ccb462779e28924f = []byte{
	// 450 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xcb, 0x6a, 0xdb, 0x40,
	0x18, 0x85, 0x75, 0x89, 0x55, 0xeb, 0x4f, 0x63, 0x85, 0x89, 0x16, 0x42, 0x04, 0x21, 0x04, 0x05,
	0x43, 0xc1, 0x81, 0x74, 0xd3, 0x94, 0xb6, 0xa1, 0x17, 0x28, 0xa1, 0x8b, 0x80, 0xb2, 0xeb, 0x4e,
	0x97, 0x41, 0xa8, 0x75, 0xaa, 0xa9, 0x34, 0x0e, 0x64, 0xd9, 0x37, 0xe8, 0x1b, 0x75, 0xdb, 0x65,
	0x96, 0xdd, 0x1a, 0x6f, 0xfa, 0x18, 0x45, 0x23, 0x69, 0x66, 0x64, 0xd7, 0xb5, 0xb5, 0x9b, 0x39,
	0xe7, 0xff, 0xe4, 0x73, 0x66, 0x64, 0x81, 0x59, 0x94, 0xd9, 0x8c, 0x94, 0x05, 0x2d, 0x90, 0x46,
	0x62, 0x17, 0xe2, 0xa8, 0xc2, 0xcd, 0xde, 0xb5, 0xb3, 0x22, 0x2b, 0xd8, 0xf2, 0xac, 0x5e, 0x35,
	0x6a, 0xf0, 0x5d, 0x05, 0xf3, 0x3a, 0xfe, 0x8c, 0x13, 0x9a, 0xdf, 0x61, 0x34, 0x01, 0x2d, 0x4f,
	0x1d, 0xd5, 0x57, 0xa7, 0x7a, 0xa8, 0xe5, 0x29, 0x42, 0x70, 0xf0, 0x35, 0xba, 0xc5, 0x8e, 0xe6,
	0xab, 0x53, 0x33, 0x64, 0x6b, 0x64, 0xc3, 0x88, 0x46, 0xd9, 0x55, 0xea, 0x1c, 0xb0, 0xb1, 0x66,
	0x83, 0x4e, 0xc1, 0x4c, 0x4a, 0x1c, 0x51, 0x9c, 0xbe, 0xa1, 0xce, 0x88, 0x39, 0x42, 0xa8, 0xdd,
	0x05, 0x49, 0x5b, 0x77, 0xdc, 0xb8, 0x5c, 0x08, 0x7e, 0xaa, 0x60, 0x7e, 0xc4, 0xf7, 0x21, 0xae,
	0x16, 0x73, 0xba, 0x57, 0x06, 0x1f, 0x0e, 0x8b, 0x2e, 0xf4, 0x55, 0xea, 0xe8, 0x6c, 0x58, 0x96,
	0x44, 0xca, 0x91, 0x9c, 0xd2, 0x85, 0x71, 0x52, 0xdc, 0x92, 0x39, 0xa6, 0xd8, 0x31, 0x7c, 0x75,
	0x3a, 0x0e, 0xf9, 0xbe, 0xdf, 0xe0, 0xd1, 0xb0, 0x06, 0x97, 0x70, 0xcc, 0x0f, 0x31, 0xc4, 0xdf,
	0x16, 0xb8, 0xa2, 0xe8, 0x29, 0x98, 0x3c, 0x10, 0xab, 0x73, 0x78, 0x7e, 0x34, 0x23, 0xf1, 0x4c,
	0x0c, 0x0a, 0x3f, 0x78, 0x05, 0x13, 0xe9, 0x01, 0x64, 0x7e, 0x3f, 0x0c, 0x7f, 0x0d, 0x16, 0xd7,
	0xab, 0x7f, 0xf2, 0xfa, 0x7f, 0xf9, 0x4b, 0x38, 0xe6, 0x17, 0x20, 0xe5, 0xff, 0xd2, 0x69, 0x72,
	0x00, 0x31, 0x28, 0xfc, 0x3a, 0xbf, 0xf4, 0x80, 0xf6, 0xf7, 0xf7, 0xc7, 0x9f, 0x83, 0xc5, 0xf5,
	0x36, 0xff, 0x13, 0x30, 0xca, 0x0e, 0xd6, 0x37, 0xe1, 0xd6, 0x3c, 0xff, 0xa3, 0x83, 0x71, 0x5d,
	0x66, 0x37, 0x77, 0x09, 0xba, 0x00, 0xeb, 0x1d, 0xbb, 0x2f, 0xf1, 0x3e, 0xdb, 0xfd, 0xc6, 0x4d,
	0x33, 0x77, 0x52, 0xab, 0x37, 0x34, 0xa2, 0xcd, 0x51, 0x07, 0x0a, 0x7a, 0x01, 0x8f, 0x3f, 0x60,
	0xba, 0x8b, 0x43, 0x6b, 0x6a, 0xc3, 0xbe, 0x84, 0x23, 0x99, 0xad, 0xb6, 0xc0, 0x27, 0x3d, 0xb5,
	0xea, 0xe8, 0x0b, 0xb0, 0xde, 0xe3, 0xfa, 0xfd, 0x1b, 0x1e, 0x9a, 0xf7, 0x15, 0xff, 0x1d, 0xbb,
	0x7f, 0x48, 0x3b, 0xfa, 0xee, 0xe2, 0xd0, 0x9a, 0x2a, 0xf7, 0x15, 0xd7, 0xb5, 0x05, 0x3e, 0xe9,
	0xa9, 0x9b, 0x7d, 0x07, 0x87, 0x7e, 0x7b, 0xfa, 0x6b, 0xe9, 0xa9, 0x0f, 0x4b, 0x4f, 0xf9, 0xb1,
	0xf2, 0x94, 0x87, 0x95, 0xa7, 0xfc, 0x5e, 0x79, 0xca, 0x27, 0x23, 0x22, 0xf9, 0x19, 0x89, 0x63,
	0x83, 0x7d, 0xcf, 0x9e, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xe5, 0xa4, 0x40, 0xc3, 0x02, 0x05,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrgSvcClient is the client API for OrgSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrgSvcClient interface {
	CreateObjective(ctx context.Context, in *ObjectiveRequest, opts ...grpc.CallOption) (*StateReply, error)
	GetObjective(ctx context.Context, in *ObjectiveRequest, opts ...grpc.CallOption) (*ObjectiveReply, error)
	GetObjectives(ctx context.Context, in *ObjectiveRequest, opts ...grpc.CallOption) (*ObjectivesReply, error)
	DeleteObjective(ctx context.Context, in *ObjectiveRequest, opts ...grpc.CallOption) (*StateReply, error)
	CreateKeyResult(ctx context.Context, in *KeyResultRequest, opts ...grpc.CallOption) (*StateReply, error)
	GetKeyResult(ctx context.Context, in *KeyResultRequest, opts ...grpc.CallOption) (*KeyResultReply, error)
	GetKeyResults(ctx context.Context, in *KeyResultRequest, opts ...grpc.CallOption) (*KeyResultsReply, error)
	DeleteKeyResult(ctx context.Context, in *KeyResultRequest, opts ...grpc.CallOption) (*StateReply, error)
}

type orgSvcClient struct {
	cc *grpc.ClientConn
}

func NewOrgSvcClient(cc *grpc.ClientConn) OrgSvcClient {
	return &orgSvcClient{cc}
}

func (c *orgSvcClient) CreateObjective(ctx context.Context, in *ObjectiveRequest, opts ...grpc.CallOption) (*StateReply, error) {
	out := new(StateReply)
	err := c.cc.Invoke(ctx, "/pb.OrgSvc/CreateObjective", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgSvcClient) GetObjective(ctx context.Context, in *ObjectiveRequest, opts ...grpc.CallOption) (*ObjectiveReply, error) {
	out := new(ObjectiveReply)
	err := c.cc.Invoke(ctx, "/pb.OrgSvc/GetObjective", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgSvcClient) GetObjectives(ctx context.Context, in *ObjectiveRequest, opts ...grpc.CallOption) (*ObjectivesReply, error) {
	out := new(ObjectivesReply)
	err := c.cc.Invoke(ctx, "/pb.OrgSvc/GetObjectives", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgSvcClient) DeleteObjective(ctx context.Context, in *ObjectiveRequest, opts ...grpc.CallOption) (*StateReply, error) {
	out := new(StateReply)
	err := c.cc.Invoke(ctx, "/pb.OrgSvc/DeleteObjective", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgSvcClient) CreateKeyResult(ctx context.Context, in *KeyResultRequest, opts ...grpc.CallOption) (*StateReply, error) {
	out := new(StateReply)
	err := c.cc.Invoke(ctx, "/pb.OrgSvc/CreateKeyResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgSvcClient) GetKeyResult(ctx context.Context, in *KeyResultRequest, opts ...grpc.CallOption) (*KeyResultReply, error) {
	out := new(KeyResultReply)
	err := c.cc.Invoke(ctx, "/pb.OrgSvc/GetKeyResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgSvcClient) GetKeyResults(ctx context.Context, in *KeyResultRequest, opts ...grpc.CallOption) (*KeyResultsReply, error) {
	out := new(KeyResultsReply)
	err := c.cc.Invoke(ctx, "/pb.OrgSvc/GetKeyResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgSvcClient) DeleteKeyResult(ctx context.Context, in *KeyResultRequest, opts ...grpc.CallOption) (*StateReply, error) {
	out := new(StateReply)
	err := c.cc.Invoke(ctx, "/pb.OrgSvc/DeleteKeyResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrgSvcServer is the server API for OrgSvc service.
type OrgSvcServer interface {
	CreateObjective(context.Context, *ObjectiveRequest) (*StateReply, error)
	GetObjective(context.Context, *ObjectiveRequest) (*ObjectiveReply, error)
	GetObjectives(context.Context, *ObjectiveRequest) (*ObjectivesReply, error)
	DeleteObjective(context.Context, *ObjectiveRequest) (*StateReply, error)
	CreateKeyResult(context.Context, *KeyResultRequest) (*StateReply, error)
	GetKeyResult(context.Context, *KeyResultRequest) (*KeyResultReply, error)
	GetKeyResults(context.Context, *KeyResultRequest) (*KeyResultsReply, error)
	DeleteKeyResult(context.Context, *KeyResultRequest) (*StateReply, error)
}

// UnimplementedOrgSvcServer can be embedded to have forward compatible implementations.
type UnimplementedOrgSvcServer struct {
}

func (*UnimplementedOrgSvcServer) CreateObjective(ctx context.Context, req *ObjectiveRequest) (*StateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateObjective not implemented")
}
func (*UnimplementedOrgSvcServer) GetObjective(ctx context.Context, req *ObjectiveRequest) (*ObjectiveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetObjective not implemented")
}
func (*UnimplementedOrgSvcServer) GetObjectives(ctx context.Context, req *ObjectiveRequest) (*ObjectivesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetObjectives not implemented")
}
func (*UnimplementedOrgSvcServer) DeleteObjective(ctx context.Context, req *ObjectiveRequest) (*StateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteObjective not implemented")
}
func (*UnimplementedOrgSvcServer) CreateKeyResult(ctx context.Context, req *KeyResultRequest) (*StateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKeyResult not implemented")
}
func (*UnimplementedOrgSvcServer) GetKeyResult(ctx context.Context, req *KeyResultRequest) (*KeyResultReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKeyResult not implemented")
}
func (*UnimplementedOrgSvcServer) GetKeyResults(ctx context.Context, req *KeyResultRequest) (*KeyResultsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKeyResults not implemented")
}
func (*UnimplementedOrgSvcServer) DeleteKeyResult(ctx context.Context, req *KeyResultRequest) (*StateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteKeyResult not implemented")
}

func RegisterOrgSvcServer(s *grpc.Server, srv OrgSvcServer) {
	s.RegisterService(&_OrgSvc_serviceDesc, srv)
}

func _OrgSvc_CreateObjective_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgSvcServer).CreateObjective(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrgSvc/CreateObjective",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgSvcServer).CreateObjective(ctx, req.(*ObjectiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrgSvc_GetObjective_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgSvcServer).GetObjective(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrgSvc/GetObjective",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgSvcServer).GetObjective(ctx, req.(*ObjectiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrgSvc_GetObjectives_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgSvcServer).GetObjectives(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrgSvc/GetObjectives",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgSvcServer).GetObjectives(ctx, req.(*ObjectiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrgSvc_DeleteObjective_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgSvcServer).DeleteObjective(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrgSvc/DeleteObjective",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgSvcServer).DeleteObjective(ctx, req.(*ObjectiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrgSvc_CreateKeyResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgSvcServer).CreateKeyResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrgSvc/CreateKeyResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgSvcServer).CreateKeyResult(ctx, req.(*KeyResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrgSvc_GetKeyResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgSvcServer).GetKeyResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrgSvc/GetKeyResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgSvcServer).GetKeyResult(ctx, req.(*KeyResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrgSvc_GetKeyResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgSvcServer).GetKeyResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrgSvc/GetKeyResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgSvcServer).GetKeyResults(ctx, req.(*KeyResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrgSvc_DeleteKeyResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgSvcServer).DeleteKeyResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.OrgSvc/DeleteKeyResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgSvcServer).DeleteKeyResult(ctx, req.(*KeyResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrgSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.OrgSvc",
	HandlerType: (*OrgSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateObjective",
			Handler:    _OrgSvc_CreateObjective_Handler,
		},
		{
			MethodName: "GetObjective",
			Handler:    _OrgSvc_GetObjective_Handler,
		},
		{
			MethodName: "GetObjectives",
			Handler:    _OrgSvc_GetObjectives_Handler,
		},
		{
			MethodName: "DeleteObjective",
			Handler:    _OrgSvc_DeleteObjective_Handler,
		},
		{
			MethodName: "CreateKeyResult",
			Handler:    _OrgSvc_CreateKeyResult_Handler,
		},
		{
			MethodName: "GetKeyResult",
			Handler:    _OrgSvc_GetKeyResult_Handler,
		},
		{
			MethodName: "GetKeyResults",
			Handler:    _OrgSvc_GetKeyResults_Handler,
		},
		{
			MethodName: "DeleteKeyResult",
			Handler:    _OrgSvc_DeleteKeyResult_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "org.proto",
}
