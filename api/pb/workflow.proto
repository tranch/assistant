syntax = "proto3";
package pb;

import "base.proto";
import "gogoproto/gogo.proto";

option (gogoproto.goproto_unkeyed_all) = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_sizecache_all) = false;
option (gogoproto.goproto_getters_all) = true;
option (gogoproto.goproto_enum_prefix_all) = false;

option go_package = "api/pb";

service WorkflowSvc {
  rpc SyntaxCheck(WorkflowRequest) returns (StateReply) {}
  rpc RunAction(WorkflowRequest) returns (WorkflowReply) {}
  rpc WebhookTrigger(TriggerRequest) returns (WorkflowReply) {}
  rpc CronTrigger(TriggerRequest) returns (WorkflowReply) {}
  rpc CreateTrigger(TriggerRequest) returns (StateReply) {}
  rpc DeleteTrigger(TriggerRequest) returns (StateReply) {}
  rpc ActionDoc(WorkflowRequest) returns (WorkflowReply) {}
  rpc ListWebhook(WorkflowRequest) returns (WebhooksReply) {}
}

message WorkflowRequest {
  string text = 1;
  string type = 2;
}

message WorkflowReply {
  string text = 1;
}

message TriggerRequest {
  Trigger trigger = 1;
  TriggerInfo info = 2;
}

message Trigger {
  // @inject_tag: db:"id" gorm:"primaryKey"
  int64 id = 1;
  // @inject_tag: db:"type"
  string type = 2;
  // @inject_tag: db:"kind"
  string kind = 3;
  // @inject_tag: db:"flag"
  string flag = 4;
  // @inject_tag: db:"secret"
  string secret = 5;
  // @inject_tag: db:"when"
  string when = 6;
  // @inject_tag: db:"message_id"
  int64 message_id = 7;
  // @inject_tag: db:"created_at"
  int64 created_at = 8;
}

message TriggerInfo {
  string message_text = 9;
  string header = 10;
  string body = 11;
}

message WebhooksReply {
  repeated string flag = 1;
}
