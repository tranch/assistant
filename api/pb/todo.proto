syntax = "proto3";
package pb;

import "base.proto";
import "gogoproto/gogo.proto";

option (gogoproto.goproto_unkeyed_all) = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_sizecache_all) = false;
option (gogoproto.goproto_getters_all) = true;
option (gogoproto.goproto_enum_prefix_all) = false;

option go_package = "api/pb";

service TodoSvc {
  rpc CreateTodo(TodoRequest) returns (StateReply) {}
  rpc GetTodo(TodoRequest) returns (TodoReply) {}
  rpc GetTodos(TodoRequest) returns (TodosReply) {}
  rpc GetRemindTodos(TodoRequest) returns (TodosReply) {}
  rpc DeleteTodo(TodoRequest) returns (StateReply) {}
  rpc UpdateTodo(TodoRequest) returns (StateReply) {}
  rpc CompleteTodo(TodoRequest) returns (StateReply) {}
}

message TodoRequest {
  Todo todo = 1;
}

message TodoReply {
  Todo todo = 1;
}

message TodosReply {
  repeated Todo todos = 1;
}

message Todo {
  // @inject_tag: db:"id" gorm:"primaryKey"
  int64 id = 1;
  // @inject_tag: db:"user_id"
  int64 user_id = 2;
  // @inject_tag: db:"content"
  string content = 3;
  // @inject_tag: db:"category"
  string category = 4;
  // @inject_tag: db:"remark"
  string remark = 5;
  // @inject_tag: db:"priority"
  int64 priority = 6;
  // @inject_tag: db:"is_remind_at_time"
  bool is_remind_at_time = 7;
  // @inject_tag: db:"remind_at"
  int64 remind_at = 8;
  // @inject_tag: db:"repeat_method"
  string repeat_method = 9;
  // @inject_tag: db:"repeat_rule"
  string repeat_rule = 10;
  // @inject_tag: db:"repeat_end_at"
  int64 repeat_end_at = 11;
  // @inject_tag: db:"complete"
  bool complete = 12;
  // @inject_tag: db:"created_at"
  int64 created_at = 13;
  // @inject_tag: db:"updated_at"
  int64 updated_at = 14;
}
