// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: id.proto

package pb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Node struct {
	// @inject_tag: db:"id" gorm:"primaryKey"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: db:"ip"
	Ip string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	// @inject_tag: db:"port"
	Port int64 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	// @inject_tag: db:"created_at"
	CreatedAt int64 `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// @inject_tag: db:"updated_at"
	UpdatedAt int64 `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b3ad0c1fc883139, []int{0}
}
func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Node) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Node) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Node) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Node) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type IdRequest struct {
	Ip   string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port int64  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (m *IdRequest) Reset()         { *m = IdRequest{} }
func (m *IdRequest) String() string { return proto.CompactTextString(m) }
func (*IdRequest) ProtoMessage()    {}
func (*IdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b3ad0c1fc883139, []int{1}
}
func (m *IdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdRequest.Unmarshal(m, b)
}
func (m *IdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdRequest.Marshal(b, m, deterministic)
}
func (m *IdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdRequest.Merge(m, src)
}
func (m *IdRequest) XXX_Size() int {
	return xxx_messageInfo_IdRequest.Size(m)
}
func (m *IdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IdRequest proto.InternalMessageInfo

func (m *IdRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *IdRequest) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

type IdReply struct {
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *IdReply) Reset()         { *m = IdReply{} }
func (m *IdReply) String() string { return proto.CompactTextString(m) }
func (*IdReply) ProtoMessage()    {}
func (*IdReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4b3ad0c1fc883139, []int{2}
}
func (m *IdReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdReply.Unmarshal(m, b)
}
func (m *IdReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdReply.Marshal(b, m, deterministic)
}
func (m *IdReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdReply.Merge(m, src)
}
func (m *IdReply) XXX_Size() int {
	return xxx_messageInfo_IdReply.Size(m)
}
func (m *IdReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IdReply.DiscardUnknown(m)
}

var xxx_messageInfo_IdReply proto.InternalMessageInfo

func (m *IdReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Node)(nil), "pb.Node")
	proto.RegisterType((*IdRequest)(nil), "pb.IdRequest")
	proto.RegisterType((*IdReply)(nil), "pb.IdReply")
}

func init() { proto.RegisterFile("id.proto", fileDescriptor_4b3ad0c1fc883139) }

var fileDescriptor_4b3ad0c1fc883139 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc8, 0x4c, 0xd1, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x92, 0x12, 0x49, 0xcf, 0x4f, 0xcf, 0x07, 0x73,
	0xf5, 0x41, 0x2c, 0x88, 0x8c, 0x52, 0x05, 0x17, 0x8b, 0x5f, 0x7e, 0x4a, 0xaa, 0x10, 0x1f, 0x17,
	0x53, 0x66, 0x8a, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x53, 0x66, 0x0a, 0x98, 0x5f, 0x20,
	0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x19, 0xc4, 0x94, 0x59, 0x20, 0x24, 0xc4, 0xc5, 0x52, 0x90, 0x5f,
	0x54, 0x22, 0xc1, 0x0c, 0x56, 0x01, 0x66, 0x0b, 0xc9, 0x72, 0x71, 0x25, 0x17, 0xa5, 0x26, 0x96,
	0xa4, 0xa6, 0xc4, 0x27, 0x96, 0x48, 0xb0, 0x80, 0x65, 0x38, 0xa1, 0x22, 0x8e, 0x60, 0xe9, 0xd2,
	0x82, 0x14, 0x98, 0x34, 0x2b, 0x44, 0x1a, 0x2a, 0xe2, 0x58, 0xa2, 0xa4, 0xcf, 0xc5, 0xe9, 0x99,
	0x12, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x02, 0xb5, 0x8e, 0x11, 0xc3, 0x3a, 0x26, 0x84, 0x75,
	0x4a, 0x92, 0x5c, 0xec, 0x20, 0x0d, 0x05, 0x39, 0x95, 0xe8, 0xae, 0x35, 0x32, 0xe1, 0x62, 0xf5,
	0x4c, 0x09, 0x2e, 0x4b, 0x16, 0xd2, 0xe6, 0xe2, 0x76, 0x4f, 0x2d, 0x71, 0xcf, 0xc9, 0x4f, 0x4a,
	0xcc, 0xf1, 0x4c, 0x11, 0xe2, 0xd5, 0x2b, 0x48, 0xd2, 0x83, 0xdb, 0x22, 0xc5, 0x0d, 0xe3, 0x16,
	0xe4, 0x54, 0x2a, 0x31, 0x38, 0xc9, 0x9c, 0x78, 0x28, 0xc7, 0x78, 0xe1, 0xa1, 0x1c, 0xc3, 0x84,
	0xc7, 0x72, 0x0c, 0x17, 0x1e, 0xcb, 0x31, 0xdc, 0x78, 0x2c, 0xc7, 0x10, 0xc5, 0x96, 0x58, 0x90,
	0xa9, 0x5f, 0x90, 0x94, 0xc4, 0x06, 0x0e, 0x20, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc1,
	0x00, 0xb4, 0x70, 0x46, 0x01, 0x00, 0x00,
}
