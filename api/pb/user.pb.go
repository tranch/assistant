// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: user.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type AuthRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}
func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AuthRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type AuthReply struct {
	State                bool     `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthReply) Reset()         { *m = AuthReply{} }
func (m *AuthReply) String() string { return proto.CompactTextString(m) }
func (*AuthReply) ProtoMessage()    {}
func (*AuthReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}
func (m *AuthReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthReply.Unmarshal(m, b)
}
func (m *AuthReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthReply.Marshal(b, m, deterministic)
}
func (m *AuthReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthReply.Merge(m, src)
}
func (m *AuthReply) XXX_Size() int {
	return xxx_messageInfo_AuthReply.Size(m)
}
func (m *AuthReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthReply.DiscardUnknown(m)
}

var xxx_messageInfo_AuthReply proto.InternalMessageInfo

func (m *AuthReply) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

func (m *AuthReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AuthReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type RoleRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleRequest) Reset()         { *m = RoleRequest{} }
func (m *RoleRequest) String() string { return proto.CompactTextString(m) }
func (*RoleRequest) ProtoMessage()    {}
func (*RoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}
func (m *RoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleRequest.Unmarshal(m, b)
}
func (m *RoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleRequest.Marshal(b, m, deterministic)
}
func (m *RoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleRequest.Merge(m, src)
}
func (m *RoleRequest) XXX_Size() int {
	return xxx_messageInfo_RoleRequest.Size(m)
}
func (m *RoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoleRequest proto.InternalMessageInfo

func (m *RoleRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type RoleReply struct {
	Role                 *Role    `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleReply) Reset()         { *m = RoleReply{} }
func (m *RoleReply) String() string { return proto.CompactTextString(m) }
func (*RoleReply) ProtoMessage()    {}
func (*RoleReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}
func (m *RoleReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleReply.Unmarshal(m, b)
}
func (m *RoleReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleReply.Marshal(b, m, deterministic)
}
func (m *RoleReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleReply.Merge(m, src)
}
func (m *RoleReply) XXX_Size() int {
	return xxx_messageInfo_RoleReply.Size(m)
}
func (m *RoleReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleReply.DiscardUnknown(m)
}

var xxx_messageInfo_RoleReply proto.InternalMessageInfo

func (m *RoleReply) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type RolesReply struct {
	Roles                []*Role  `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RolesReply) Reset()         { *m = RolesReply{} }
func (m *RolesReply) String() string { return proto.CompactTextString(m) }
func (*RolesReply) ProtoMessage()    {}
func (*RolesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}
func (m *RolesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RolesReply.Unmarshal(m, b)
}
func (m *RolesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RolesReply.Marshal(b, m, deterministic)
}
func (m *RolesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RolesReply.Merge(m, src)
}
func (m *RolesReply) XXX_Size() int {
	return xxx_messageInfo_RolesReply.Size(m)
}
func (m *RolesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RolesReply.DiscardUnknown(m)
}

var xxx_messageInfo_RolesReply proto.InternalMessageInfo

func (m *RolesReply) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

type UserRequest struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}
func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UserReply struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserReply) Reset()         { *m = UserReply{} }
func (m *UserReply) String() string { return proto.CompactTextString(m) }
func (*UserReply) ProtoMessage()    {}
func (*UserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6}
}
func (m *UserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserReply.Unmarshal(m, b)
}
func (m *UserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserReply.Marshal(b, m, deterministic)
}
func (m *UserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserReply.Merge(m, src)
}
func (m *UserReply) XXX_Size() int {
	return xxx_messageInfo_UserReply.Size(m)
}
func (m *UserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserReply proto.InternalMessageInfo

func (m *UserReply) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UsersReply struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsersReply) Reset()         { *m = UsersReply{} }
func (m *UsersReply) String() string { return proto.CompactTextString(m) }
func (*UsersReply) ProtoMessage()    {}
func (*UsersReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{7}
}
func (m *UsersReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsersReply.Unmarshal(m, b)
}
func (m *UsersReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsersReply.Marshal(b, m, deterministic)
}
func (m *UsersReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsersReply.Merge(m, src)
}
func (m *UsersReply) XXX_Size() int {
	return xxx_messageInfo_UsersReply.Size(m)
}
func (m *UsersReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UsersReply.DiscardUnknown(m)
}

var xxx_messageInfo_UsersReply proto.InternalMessageInfo

func (m *UsersReply) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type BytesReply struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BytesReply) Reset()         { *m = BytesReply{} }
func (m *BytesReply) String() string { return proto.CompactTextString(m) }
func (*BytesReply) ProtoMessage()    {}
func (*BytesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{8}
}
func (m *BytesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BytesReply.Unmarshal(m, b)
}
func (m *BytesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BytesReply.Marshal(b, m, deterministic)
}
func (m *BytesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BytesReply.Merge(m, src)
}
func (m *BytesReply) XXX_Size() int {
	return xxx_messageInfo_BytesReply.Size(m)
}
func (m *BytesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BytesReply.DiscardUnknown(m)
}

var xxx_messageInfo_BytesReply proto.InternalMessageInfo

func (m *BytesReply) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type User struct {
	// @inject_tag: db:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" db:"id"`
	// @inject_tag: db:"name"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" db:"name"`
	// @inject_tag: db:"mobile"
	Mobile string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty" db:"mobile"`
	// @inject_tag: db:"remark"
	Remark string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty" db:"remark"`
	// @inject_tag: db:"created_at"
	CreatedAt string `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty" db:"created_at"`
	// @inject_tag: db:"updated_at"
	UpdatedAt            string   `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty" db:"updated_at"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{9}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *User) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *User) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *User) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type Role struct {
	// @inject_tag: db:"id"
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" db:"id"`
	// @inject_tag: db:"user_id"
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty" db:"user_id"`
	// @inject_tag: db:"profession"
	Profession string `protobuf:"bytes,3,opt,name=profession,proto3" json:"profession,omitempty" db:"profession"`
	// @inject_tag: db:"exp"
	Exp int64 `protobuf:"varint,4,opt,name=exp,proto3" json:"exp,omitempty" db:"exp"`
	// @inject_tag: db:"level"
	Level int64 `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty" db:"level"`
	// @inject_tag: db:"strength"
	Strength int64 `protobuf:"varint,6,opt,name=strength,proto3" json:"strength,omitempty" db:"strength"`
	// @inject_tag: db:"culture"
	Culture int64 `protobuf:"varint,7,opt,name=culture,proto3" json:"culture,omitempty" db:"culture"`
	// @inject_tag: db:"environment"
	Environment int64 `protobuf:"varint,8,opt,name=environment,proto3" json:"environment,omitempty" db:"environment"`
	// @inject_tag: db:"charisma"
	Charisma int64 `protobuf:"varint,9,opt,name=charisma,proto3" json:"charisma,omitempty" db:"charisma"`
	// @inject_tag: db:"talent"
	Talent int64 `protobuf:"varint,10,opt,name=talent,proto3" json:"talent,omitempty" db:"talent"`
	// @inject_tag: db:"intellect"
	Intellect int64 `protobuf:"varint,11,opt,name=intellect,proto3" json:"intellect,omitempty" db:"intellect"`
	// @inject_tag: db:"created_at"
	CreatedAt string `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty" db:"created_at"`
	// @inject_tag: db:"updated_at"
	UpdatedAt            string   `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty" db:"updated_at"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{10}
}
func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Role) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Role) GetProfession() string {
	if m != nil {
		return m.Profession
	}
	return ""
}

func (m *Role) GetExp() int64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *Role) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Role) GetStrength() int64 {
	if m != nil {
		return m.Strength
	}
	return 0
}

func (m *Role) GetCulture() int64 {
	if m != nil {
		return m.Culture
	}
	return 0
}

func (m *Role) GetEnvironment() int64 {
	if m != nil {
		return m.Environment
	}
	return 0
}

func (m *Role) GetCharisma() int64 {
	if m != nil {
		return m.Charisma
	}
	return 0
}

func (m *Role) GetTalent() int64 {
	if m != nil {
		return m.Talent
	}
	return 0
}

func (m *Role) GetIntellect() int64 {
	if m != nil {
		return m.Intellect
	}
	return 0
}

func (m *Role) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Role) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type Equipment struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Quality              string   `protobuf:"bytes,3,opt,name=quality,proto3" json:"quality,omitempty"`
	Level                int64    `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	Category             string   `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	CreatedAt            string   `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Equipment) Reset()         { *m = Equipment{} }
func (m *Equipment) String() string { return proto.CompactTextString(m) }
func (*Equipment) ProtoMessage()    {}
func (*Equipment) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{11}
}
func (m *Equipment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Equipment.Unmarshal(m, b)
}
func (m *Equipment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Equipment.Marshal(b, m, deterministic)
}
func (m *Equipment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Equipment.Merge(m, src)
}
func (m *Equipment) XXX_Size() int {
	return xxx_messageInfo_Equipment.Size(m)
}
func (m *Equipment) XXX_DiscardUnknown() {
	xxx_messageInfo_Equipment.DiscardUnknown(m)
}

var xxx_messageInfo_Equipment proto.InternalMessageInfo

func (m *Equipment) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Equipment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Equipment) GetQuality() string {
	if m != nil {
		return m.Quality
	}
	return ""
}

func (m *Equipment) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Equipment) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Equipment) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type Quest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Exp                  int64    `protobuf:"varint,3,opt,name=exp,proto3" json:"exp,omitempty"`
	AttrPoints           string   `protobuf:"bytes,4,opt,name=attrPoints,proto3" json:"attrPoints,omitempty"`
	Preconditions        string   `protobuf:"bytes,5,opt,name=preconditions,proto3" json:"preconditions,omitempty"`
	CreatedAt            string   `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Quest) Reset()         { *m = Quest{} }
func (m *Quest) String() string { return proto.CompactTextString(m) }
func (*Quest) ProtoMessage()    {}
func (*Quest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{12}
}
func (m *Quest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Quest.Unmarshal(m, b)
}
func (m *Quest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Quest.Marshal(b, m, deterministic)
}
func (m *Quest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Quest.Merge(m, src)
}
func (m *Quest) XXX_Size() int {
	return xxx_messageInfo_Quest.Size(m)
}
func (m *Quest) XXX_DiscardUnknown() {
	xxx_messageInfo_Quest.DiscardUnknown(m)
}

var xxx_messageInfo_Quest proto.InternalMessageInfo

func (m *Quest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Quest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Quest) GetExp() int64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *Quest) GetAttrPoints() string {
	if m != nil {
		return m.AttrPoints
	}
	return ""
}

func (m *Quest) GetPreconditions() string {
	if m != nil {
		return m.Preconditions
	}
	return ""
}

func (m *Quest) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type AttrChange struct {
	UserId               int64    `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttrChange) Reset()         { *m = AttrChange{} }
func (m *AttrChange) String() string { return proto.CompactTextString(m) }
func (*AttrChange) ProtoMessage()    {}
func (*AttrChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{13}
}
func (m *AttrChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttrChange.Unmarshal(m, b)
}
func (m *AttrChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttrChange.Marshal(b, m, deterministic)
}
func (m *AttrChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttrChange.Merge(m, src)
}
func (m *AttrChange) XXX_Size() int {
	return xxx_messageInfo_AttrChange.Size(m)
}
func (m *AttrChange) XXX_DiscardUnknown() {
	xxx_messageInfo_AttrChange.DiscardUnknown(m)
}

var xxx_messageInfo_AttrChange proto.InternalMessageInfo

func (m *AttrChange) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *AttrChange) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthRequest)(nil), "pb.AuthRequest")
	proto.RegisterType((*AuthReply)(nil), "pb.AuthReply")
	proto.RegisterType((*RoleRequest)(nil), "pb.RoleRequest")
	proto.RegisterType((*RoleReply)(nil), "pb.RoleReply")
	proto.RegisterType((*RolesReply)(nil), "pb.RolesReply")
	proto.RegisterType((*UserRequest)(nil), "pb.UserRequest")
	proto.RegisterType((*UserReply)(nil), "pb.UserReply")
	proto.RegisterType((*UsersReply)(nil), "pb.UsersReply")
	proto.RegisterType((*BytesReply)(nil), "pb.BytesReply")
	proto.RegisterType((*User)(nil), "pb.User")
	proto.RegisterType((*Role)(nil), "pb.Role")
	proto.RegisterType((*Equipment)(nil), "pb.Equipment")
	proto.RegisterType((*Quest)(nil), "pb.Quest")
	proto.RegisterType((*AttrChange)(nil), "pb.AttrChange")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 731 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xcd, 0x4e, 0xe3, 0x48,
	0x10, 0xc6, 0xb1, 0xf3, 0x57, 0x49, 0x60, 0xd5, 0x5a, 0x21, 0x0b, 0xb1, 0x28, 0xb2, 0xf6, 0xc0,
	0x0a, 0x36, 0x2c, 0x70, 0x5f, 0x09, 0xd0, 0x0a, 0x71, 0x59, 0xed, 0x9a, 0xe5, 0xb2, 0xb7, 0x4e,
	0xd2, 0x93, 0xb4, 0x70, 0xdc, 0xa6, 0x5d, 0x46, 0x93, 0x79, 0x90, 0x91, 0xe6, 0x3c, 0xef, 0x31,
	0x4f, 0x32, 0x0f, 0x33, 0xaa, 0xee, 0xb6, 0xe3, 0x10, 0xfe, 0x6e, 0xfe, 0xbe, 0xfa, 0xe9, 0xaf,
	0xab, 0xaa, 0xcb, 0x00, 0x45, 0x2e, 0xf4, 0x28, 0xd3, 0x0a, 0x15, 0x6b, 0x64, 0xe3, 0x3d, 0x18,
	0xf3, 0x5c, 0x58, 0x1c, 0x9d, 0x43, 0xef, 0xa2, 0xc0, 0x79, 0x2c, 0x1e, 0x0a, 0x91, 0x23, 0xdb,
	0x86, 0x86, 0x9c, 0x86, 0xde, 0xd0, 0x3b, 0xf4, 0xe3, 0x86, 0x9c, 0xb2, 0x9f, 0xa1, 0x89, 0xea,
	0x5e, 0xa4, 0x61, 0x63, 0xe8, 0x1d, 0x76, 0x63, 0x0b, 0xa2, 0x6b, 0xe8, 0xda, 0xa0, 0x2c, 0x59,
	0x92, 0x4b, 0x8e, 0x1c, 0x85, 0x89, 0xea, 0xc4, 0x16, 0xb8, 0x44, 0x8d, 0xcd, 0x44, 0x7e, 0x3d,
	0xd1, 0x2f, 0xd0, 0x8b, 0x55, 0x22, 0x5e, 0x38, 0x3d, 0xfa, 0x0d, 0xba, 0xd6, 0x4c, 0xe7, 0xec,
	0x43, 0xa0, 0x55, 0x62, 0x8f, 0xe9, 0x9d, 0x75, 0x46, 0xd9, 0x78, 0x64, 0x8c, 0x86, 0x8d, 0x8e,
	0x01, 0x08, 0xe5, 0xd6, 0xf7, 0x00, 0x9a, 0xc4, 0xe6, 0xa1, 0x37, 0xf4, 0xd7, 0x9c, 0x2d, 0x1d,
	0x1d, 0x41, 0xef, 0x2e, 0x17, 0xba, 0x3c, 0x77, 0x1f, 0x02, 0x2a, 0x51, 0x3d, 0xb5, 0x31, 0x1b,
	0x96, 0x54, 0x58, 0x67, 0xa7, 0xe2, 0x15, 0xd7, 0x63, 0x00, 0x42, 0x2b, 0x15, 0xc4, 0xae, 0xa9,
	0x30, 0xce, 0x96, 0x8e, 0x86, 0x00, 0x97, 0x4b, 0x2c, 0x35, 0x33, 0x08, 0xa6, 0x1c, 0xb9, 0xc9,
	0xdc, 0x8f, 0xcd, 0x77, 0xf4, 0xd9, 0x83, 0x80, 0x22, 0x36, 0xfa, 0xc2, 0x20, 0x48, 0xf9, 0x42,
	0xb8, 0xb6, 0x98, 0x6f, 0xb6, 0x0b, 0xad, 0x85, 0x1a, 0xcb, 0x44, 0xb8, 0x1a, 0x3b, 0x44, 0xbc,
	0x16, 0x0b, 0xae, 0xef, 0xc3, 0xc0, 0xf2, 0x16, 0xb1, 0x7d, 0xe8, 0x4e, 0xb4, 0xe0, 0x28, 0xa6,
	0x17, 0x18, 0x36, 0x8d, 0x69, 0x45, 0x90, 0xb5, 0xc8, 0xa6, 0xce, 0xda, 0xb2, 0xd6, 0x8a, 0x88,
	0xbe, 0x37, 0x20, 0xa0, 0x82, 0x6e, 0x08, 0xdb, 0x85, 0x16, 0x5d, 0xee, 0xa6, 0xec, 0xbd, 0x43,
	0xec, 0x00, 0x20, 0xd3, 0xea, 0x83, 0xc8, 0x73, 0xa9, 0xca, 0x21, 0xa8, 0x31, 0xec, 0x27, 0xf0,
	0xc5, 0xc7, 0xcc, 0x28, 0xf4, 0x63, 0xfa, 0xa4, 0x89, 0x49, 0xc4, 0xa3, 0x48, 0x8c, 0x34, 0x3f,
	0xb6, 0x80, 0xed, 0x41, 0x27, 0x47, 0x2d, 0xd2, 0x19, 0xce, 0x8d, 0x2a, 0x3f, 0xae, 0x30, 0x0b,
	0xa1, 0x3d, 0x29, 0x12, 0x2c, 0xb4, 0x08, 0xdb, 0xc6, 0x54, 0x42, 0x36, 0x84, 0x9e, 0x48, 0x1f,
	0xa5, 0x56, 0xe9, 0x42, 0xa4, 0x18, 0x76, 0x8c, 0xb5, 0x4e, 0x51, 0xde, 0xc9, 0x9c, 0x6b, 0x99,
	0x2f, 0x78, 0xd8, 0xb5, 0x79, 0x4b, 0x4c, 0x77, 0x42, 0x9e, 0x50, 0x20, 0xd8, 0x3b, 0x59, 0x44,
	0x25, 0x92, 0x29, 0x8a, 0x24, 0x11, 0x13, 0x0c, 0x7b, 0xc6, 0xb4, 0x22, 0xd6, 0xcb, 0xdb, 0x7f,
	0xb5, 0xbc, 0x83, 0xa7, 0xe5, 0xfd, 0xe2, 0x41, 0xf7, 0xaf, 0x87, 0x42, 0x66, 0x46, 0xdb, 0x7b,
	0x9a, 0x1f, 0x42, 0xfb, 0xa1, 0xe0, 0x89, 0xc4, 0xa5, 0x2b, 0x6e, 0x09, 0x57, 0x75, 0x0c, 0x9e,
	0xd4, 0x71, 0xc2, 0x51, 0xcc, 0x94, 0x5e, 0xba, 0xde, 0x57, 0x78, 0x5d, 0x79, 0xeb, 0x89, 0xf2,
	0xe8, 0xab, 0x07, 0xcd, 0x7f, 0x5f, 0x5c, 0x16, 0x12, 0x13, 0x51, 0x2d, 0x0b, 0x02, 0x65, 0x67,
	0xfd, 0x55, 0x67, 0x0f, 0x00, 0x38, 0xa2, 0xfe, 0x47, 0xc9, 0x14, 0x73, 0x37, 0x94, 0x35, 0x86,
	0xfd, 0x0a, 0x83, 0x4c, 0x8b, 0x89, 0x4a, 0xa7, 0x12, 0xa5, 0x4a, 0x73, 0x27, 0x70, 0x9d, 0x7c,
	0x43, 0xe5, 0x9f, 0x00, 0x17, 0x88, 0xfa, 0x6a, 0xce, 0xd3, 0x99, 0xa8, 0x4d, 0xa5, 0xb7, 0x36,
	0x95, 0x34, 0x31, 0x2a, 0x45, 0x6a, 0xad, 0xd5, 0x5c, 0xc2, 0xb3, 0x6f, 0x3e, 0xb4, 0xe9, 0xe5,
	0xdd, 0x3e, 0x4e, 0xd8, 0x1f, 0xd0, 0xbf, 0x16, 0x48, 0x1b, 0xef, 0x3f, 0xda, 0x5a, 0x6c, 0x87,
	0x1e, 0x72, 0x6d, 0x6b, 0xee, 0x0d, 0x56, 0x44, 0x96, 0x2c, 0xa3, 0x2d, 0x76, 0x0a, 0x03, 0x82,
	0x4a, 0xcb, 0x4f, 0x9c, 0xd4, 0xbe, 0x23, 0xe4, 0x08, 0xda, 0xd7, 0x02, 0xcd, 0x9b, 0xda, 0xa9,
	0xd6, 0x55, 0xdd, 0xb9, 0xda, 0x84, 0x26, 0x7f, 0xdf, 0x39, 0xdf, 0x2c, 0xf8, 0xec, 0x99, 0x88,
	0x6d, 0x22, 0x56, 0xcb, 0x25, 0xda, 0x62, 0x23, 0x80, 0x2b, 0x53, 0x1d, 0xb3, 0x4f, 0x76, 0xaa,
	0x5d, 0x54, 0x3f, 0xa2, 0x5a, 0x73, 0x95, 0x9e, 0x77, 0x3a, 0x9f, 0xc2, 0xc0, 0x39, 0x5f, 0x2e,
	0xff, 0xa6, 0x71, 0x7c, 0x3b, 0xe4, 0x77, 0xe8, 0xb8, 0x90, 0x7c, 0xd3, 0x7b, 0xbb, 0x24, 0x2a,
	0xf9, 0x27, 0x00, 0x77, 0xe6, 0x79, 0x3c, 0xaf, 0xc8, 0x04, 0xdc, 0xd2, 0x9f, 0xc7, 0x05, 0x5c,
	0x76, 0xfe, 0x6f, 0xf1, 0x4c, 0x9e, 0x64, 0xe3, 0x71, 0xcb, 0xfc, 0xe9, 0xce, 0x7f, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x33, 0xf7, 0xab, 0xb2, 0x07, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserSvcClient is the client API for UserSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserSvcClient interface {
	GetAuthToken(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthReply, error)
	Authorization(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthReply, error)
	GetRole(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*RoleReply, error)
	GetRoleImage(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*BytesReply, error)
	CreateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error)
	GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error)
	GetUserByName(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error)
	GetUsers(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UsersReply, error)
	UpdateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*StateReply, error)
}

type userSvcClient struct {
	cc *grpc.ClientConn
}

func NewUserSvcClient(cc *grpc.ClientConn) UserSvcClient {
	return &userSvcClient{cc}
}

func (c *userSvcClient) GetAuthToken(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthReply, error) {
	out := new(AuthReply)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/GetAuthToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSvcClient) Authorization(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthReply, error) {
	out := new(AuthReply)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/Authorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSvcClient) GetRole(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*RoleReply, error) {
	out := new(RoleReply)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/GetRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSvcClient) GetRoleImage(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*BytesReply, error) {
	out := new(BytesReply)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/GetRoleImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSvcClient) CreateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error) {
	out := new(UserReply)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSvcClient) GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error) {
	out := new(UserReply)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSvcClient) GetUserByName(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error) {
	out := new(UserReply)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/GetUserByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSvcClient) GetUsers(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UsersReply, error) {
	out := new(UsersReply)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userSvcClient) UpdateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*StateReply, error) {
	out := new(StateReply)
	err := c.cc.Invoke(ctx, "/pb.UserSvc/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserSvcServer is the server API for UserSvc service.
type UserSvcServer interface {
	GetAuthToken(context.Context, *AuthRequest) (*AuthReply, error)
	Authorization(context.Context, *AuthRequest) (*AuthReply, error)
	GetRole(context.Context, *RoleRequest) (*RoleReply, error)
	GetRoleImage(context.Context, *RoleRequest) (*BytesReply, error)
	CreateUser(context.Context, *UserRequest) (*UserReply, error)
	GetUser(context.Context, *UserRequest) (*UserReply, error)
	GetUserByName(context.Context, *UserRequest) (*UserReply, error)
	GetUsers(context.Context, *UserRequest) (*UsersReply, error)
	UpdateUser(context.Context, *UserRequest) (*StateReply, error)
}

// UnimplementedUserSvcServer can be embedded to have forward compatible implementations.
type UnimplementedUserSvcServer struct {
}

func (*UnimplementedUserSvcServer) GetAuthToken(ctx context.Context, req *AuthRequest) (*AuthReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthToken not implemented")
}
func (*UnimplementedUserSvcServer) Authorization(ctx context.Context, req *AuthRequest) (*AuthReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authorization not implemented")
}
func (*UnimplementedUserSvcServer) GetRole(ctx context.Context, req *RoleRequest) (*RoleReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRole not implemented")
}
func (*UnimplementedUserSvcServer) GetRoleImage(ctx context.Context, req *RoleRequest) (*BytesReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoleImage not implemented")
}
func (*UnimplementedUserSvcServer) CreateUser(ctx context.Context, req *UserRequest) (*UserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedUserSvcServer) GetUser(ctx context.Context, req *UserRequest) (*UserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUserSvcServer) GetUserByName(ctx context.Context, req *UserRequest) (*UserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByName not implemented")
}
func (*UnimplementedUserSvcServer) GetUsers(ctx context.Context, req *UserRequest) (*UsersReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (*UnimplementedUserSvcServer) UpdateUser(ctx context.Context, req *UserRequest) (*StateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}

func RegisterUserSvcServer(s *grpc.Server, srv UserSvcServer) {
	s.RegisterService(&_UserSvc_serviceDesc, srv)
}

func _UserSvc_GetAuthToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).GetAuthToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/GetAuthToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).GetAuthToken(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSvc_Authorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).Authorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/Authorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).Authorization(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSvc_GetRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).GetRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/GetRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).GetRole(ctx, req.(*RoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSvc_GetRoleImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).GetRoleImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/GetRoleImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).GetRoleImage(ctx, req.(*RoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSvc_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).CreateUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSvc_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).GetUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSvc_GetUserByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).GetUserByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/GetUserByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).GetUserByName(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSvc_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).GetUsers(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserSvc_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserSvcServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserSvc/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserSvcServer).UpdateUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UserSvc",
	HandlerType: (*UserSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAuthToken",
			Handler:    _UserSvc_GetAuthToken_Handler,
		},
		{
			MethodName: "Authorization",
			Handler:    _UserSvc_Authorization_Handler,
		},
		{
			MethodName: "GetRole",
			Handler:    _UserSvc_GetRole_Handler,
		},
		{
			MethodName: "GetRoleImage",
			Handler:    _UserSvc_GetRoleImage_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _UserSvc_CreateUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _UserSvc_GetUser_Handler,
		},
		{
			MethodName: "GetUserByName",
			Handler:    _UserSvc_GetUserByName_Handler,
		},
		{
			MethodName: "GetUsers",
			Handler:    _UserSvc_GetUsers_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UserSvc_UpdateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
