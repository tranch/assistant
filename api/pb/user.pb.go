// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: user.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RoleRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleRequest) Reset()         { *m = RoleRequest{} }
func (m *RoleRequest) String() string { return proto.CompactTextString(m) }
func (*RoleRequest) ProtoMessage()    {}
func (*RoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}
func (m *RoleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleRequest.Unmarshal(m, b)
}
func (m *RoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleRequest.Marshal(b, m, deterministic)
}
func (m *RoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleRequest.Merge(m, src)
}
func (m *RoleRequest) XXX_Size() int {
	return xxx_messageInfo_RoleRequest.Size(m)
}
func (m *RoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoleRequest proto.InternalMessageInfo

func (m *RoleRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type RoleReply struct {
	Role                 *Role    `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleReply) Reset()         { *m = RoleReply{} }
func (m *RoleReply) String() string { return proto.CompactTextString(m) }
func (*RoleReply) ProtoMessage()    {}
func (*RoleReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}
func (m *RoleReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleReply.Unmarshal(m, b)
}
func (m *RoleReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleReply.Marshal(b, m, deterministic)
}
func (m *RoleReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleReply.Merge(m, src)
}
func (m *RoleReply) XXX_Size() int {
	return xxx_messageInfo_RoleReply.Size(m)
}
func (m *RoleReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleReply.DiscardUnknown(m)
}

var xxx_messageInfo_RoleReply proto.InternalMessageInfo

func (m *RoleReply) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type RolesReply struct {
	Roles                []*Role  `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RolesReply) Reset()         { *m = RolesReply{} }
func (m *RolesReply) String() string { return proto.CompactTextString(m) }
func (*RolesReply) ProtoMessage()    {}
func (*RolesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}
func (m *RolesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RolesReply.Unmarshal(m, b)
}
func (m *RolesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RolesReply.Marshal(b, m, deterministic)
}
func (m *RolesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RolesReply.Merge(m, src)
}
func (m *RolesReply) XXX_Size() int {
	return xxx_messageInfo_RolesReply.Size(m)
}
func (m *RolesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RolesReply.DiscardUnknown(m)
}

var xxx_messageInfo_RolesReply proto.InternalMessageInfo

func (m *RolesReply) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

type Role struct {
	Profession           string   `protobuf:"bytes,1,opt,name=profession,proto3" json:"profession,omitempty"`
	Exp                  int64    `protobuf:"varint,2,opt,name=exp,proto3" json:"exp,omitempty"`
	Level                int64    `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	Strength             int64    `protobuf:"varint,4,opt,name=strength,proto3" json:"strength,omitempty"`
	Culture              int64    `protobuf:"varint,5,opt,name=culture,proto3" json:"culture,omitempty"`
	Environment          int64    `protobuf:"varint,6,opt,name=environment,proto3" json:"environment,omitempty"`
	Charisma             int64    `protobuf:"varint,7,opt,name=charisma,proto3" json:"charisma,omitempty"`
	Talent               int64    `protobuf:"varint,8,opt,name=talent,proto3" json:"talent,omitempty"`
	Intellect            int64    `protobuf:"varint,9,opt,name=intellect,proto3" json:"intellect,omitempty"`
	Time                 string   `protobuf:"bytes,10,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}
func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetProfession() string {
	if m != nil {
		return m.Profession
	}
	return ""
}

func (m *Role) GetExp() int64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *Role) GetLevel() int64 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Role) GetStrength() int64 {
	if m != nil {
		return m.Strength
	}
	return 0
}

func (m *Role) GetCulture() int64 {
	if m != nil {
		return m.Culture
	}
	return 0
}

func (m *Role) GetEnvironment() int64 {
	if m != nil {
		return m.Environment
	}
	return 0
}

func (m *Role) GetCharisma() int64 {
	if m != nil {
		return m.Charisma
	}
	return 0
}

func (m *Role) GetTalent() int64 {
	if m != nil {
		return m.Talent
	}
	return 0
}

func (m *Role) GetIntellect() int64 {
	if m != nil {
		return m.Intellect
	}
	return 0
}

func (m *Role) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

type UserRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mobile               string   `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Remark               string   `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}
func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserRequest) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type UserReply struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mobile               string   `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Remark               string   `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserReply) Reset()         { *m = UserReply{} }
func (m *UserReply) String() string { return proto.CompactTextString(m) }
func (*UserReply) ProtoMessage()    {}
func (*UserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}
func (m *UserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserReply.Unmarshal(m, b)
}
func (m *UserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserReply.Marshal(b, m, deterministic)
}
func (m *UserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserReply.Merge(m, src)
}
func (m *UserReply) XXX_Size() int {
	return xxx_messageInfo_UserReply.Size(m)
}
func (m *UserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserReply proto.InternalMessageInfo

func (m *UserReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserReply) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserReply) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

type UsersReply struct {
	Users                []*UserItem `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UsersReply) Reset()         { *m = UsersReply{} }
func (m *UsersReply) String() string { return proto.CompactTextString(m) }
func (*UsersReply) ProtoMessage()    {}
func (*UsersReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6}
}
func (m *UsersReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsersReply.Unmarshal(m, b)
}
func (m *UsersReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsersReply.Marshal(b, m, deterministic)
}
func (m *UsersReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsersReply.Merge(m, src)
}
func (m *UsersReply) XXX_Size() int {
	return xxx_messageInfo_UsersReply.Size(m)
}
func (m *UsersReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UsersReply.DiscardUnknown(m)
}

var xxx_messageInfo_UsersReply proto.InternalMessageInfo

func (m *UsersReply) GetUsers() []*UserItem {
	if m != nil {
		return m.Users
	}
	return nil
}

type UserItem struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Mobile               string   `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Remark               string   `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserItem) Reset()         { *m = UserItem{} }
func (m *UserItem) String() string { return proto.CompactTextString(m) }
func (*UserItem) ProtoMessage()    {}
func (*UserItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{7}
}
func (m *UserItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserItem.Unmarshal(m, b)
}
func (m *UserItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserItem.Marshal(b, m, deterministic)
}
func (m *UserItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserItem.Merge(m, src)
}
func (m *UserItem) XXX_Size() int {
	return xxx_messageInfo_UserItem.Size(m)
}
func (m *UserItem) XXX_DiscardUnknown() {
	xxx_messageInfo_UserItem.DiscardUnknown(m)
}

var xxx_messageInfo_UserItem proto.InternalMessageInfo

func (m *UserItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserItem) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserItem) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func init() {
	proto.RegisterType((*RoleRequest)(nil), "pb.RoleRequest")
	proto.RegisterType((*RoleReply)(nil), "pb.RoleReply")
	proto.RegisterType((*RolesReply)(nil), "pb.RolesReply")
	proto.RegisterType((*Role)(nil), "pb.Role")
	proto.RegisterType((*UserRequest)(nil), "pb.UserRequest")
	proto.RegisterType((*UserReply)(nil), "pb.UserReply")
	proto.RegisterType((*UsersReply)(nil), "pb.UsersReply")
	proto.RegisterType((*UserItem)(nil), "pb.UserItem")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 509 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x26, 0xff, 0xf6, 0xa4, 0x49, 0xd0, 0x0a, 0xa1, 0x55, 0x54, 0xaa, 0xc8, 0x27, 0x10, 0x90,
	0x96, 0xf0, 0x04, 0x94, 0x03, 0xea, 0x85, 0x83, 0x69, 0x2f, 0x1c, 0x40, 0xeb, 0x64, 0x68, 0xac,
	0xda, 0x5e, 0xb3, 0xbb, 0xae, 0x5a, 0x9e, 0x81, 0x37, 0xe2, 0xe5, 0xd0, 0xcc, 0xda, 0x69, 0xaa,
	0x10, 0xd1, 0x4b, 0x6f, 0xfe, 0x7e, 0x66, 0x67, 0x76, 0xf6, 0x93, 0x01, 0x2a, 0x8b, 0x66, 0x5e,
	0x1a, 0xed, 0xb4, 0x68, 0x97, 0xc9, 0x14, 0x12, 0x65, 0xd1, 0xe3, 0xe8, 0x05, 0x0c, 0x63, 0x9d,
	0x61, 0x8c, 0x3f, 0x2b, 0xb4, 0x4e, 0x8c, 0xa1, 0x9d, 0xae, 0x64, 0x6b, 0xd6, 0x7a, 0xd9, 0x89,
	0xdb, 0xe9, 0x2a, 0x7a, 0x05, 0xa1, 0x97, 0xcb, 0xec, 0x56, 0x1c, 0x42, 0xd7, 0xe8, 0x0c, 0x59,
	0x1e, 0x2e, 0x82, 0x79, 0x99, 0xcc, 0x59, 0x64, 0x36, 0x7a, 0x03, 0x40, 0xc8, 0x7a, 0xef, 0x11,
	0xf4, 0x88, 0xb5, 0xb2, 0x35, 0xeb, 0xdc, 0x33, 0x7b, 0x3a, 0xfa, 0xdd, 0x86, 0x2e, 0x61, 0x71,
	0x04, 0x50, 0x1a, 0xfd, 0x03, 0xad, 0x4d, 0x75, 0xc1, 0x47, 0x87, 0xf1, 0x16, 0x23, 0x9e, 0x42,
	0x07, 0x6f, 0x4a, 0xd9, 0xe6, 0x91, 0xe8, 0x53, 0x3c, 0x83, 0x5e, 0x86, 0xd7, 0x98, 0xc9, 0x0e,
	0x73, 0x1e, 0x88, 0x29, 0x04, 0xd6, 0x19, 0x2c, 0x2e, 0xdd, 0x5a, 0x76, 0x59, 0xd8, 0x60, 0x21,
	0x61, 0xb0, 0xac, 0x32, 0x57, 0x19, 0x94, 0x3d, 0x96, 0x1a, 0x28, 0x66, 0x30, 0xc4, 0xe2, 0x3a,
	0x35, 0xba, 0xc8, 0xb1, 0x70, 0xb2, 0xcf, 0xea, 0x36, 0x45, 0xe7, 0x2e, 0xd7, 0xca, 0xa4, 0x36,
	0x57, 0x72, 0xe0, 0xcf, 0x6d, 0xb0, 0x78, 0x0e, 0x7d, 0xa7, 0x32, 0x2a, 0x0c, 0x58, 0xa9, 0x91,
	0x38, 0x84, 0x30, 0x2d, 0x1c, 0x66, 0x19, 0x2e, 0x9d, 0x0c, 0x59, 0xba, 0x23, 0x84, 0x80, 0xae,
	0x4b, 0x73, 0x94, 0xc0, 0x77, 0xe5, 0xef, 0x48, 0xc1, 0xf0, 0xc2, 0xa2, 0xd9, 0xf3, 0x0c, 0x54,
	0x52, 0xa8, 0x1c, 0x79, 0x0b, 0x61, 0xcc, 0xdf, 0xd4, 0x3c, 0xd7, 0x49, 0x9a, 0x21, 0xef, 0x21,
	0x8c, 0x6b, 0x44, 0xbc, 0xc1, 0x5c, 0x99, 0x2b, 0x5e, 0x43, 0x18, 0xd7, 0x28, 0xfa, 0x0e, 0xa1,
	0x6f, 0x41, 0xcf, 0xf3, 0x18, 0x0d, 0x4e, 0x00, 0xa8, 0x41, 0x1d, 0x80, 0x08, 0x7a, 0x14, 0xbb,
	0x26, 0x00, 0x07, 0x14, 0x00, 0x92, 0xcf, 0x1c, 0xe6, 0xb1, 0x97, 0xa2, 0x6f, 0x10, 0x34, 0xd4,
	0x63, 0x4c, 0xb4, 0xf8, 0xd3, 0x81, 0x2e, 0x35, 0x10, 0x0b, 0x18, 0x7d, 0xa8, 0xdc, 0x5a, 0x9b,
	0xf4, 0x97, 0x72, 0x94, 0xaa, 0x09, 0x8d, 0x73, 0x8e, 0x37, 0xae, 0xde, 0xf8, 0x74, 0x4c, 0xc4,
	0x17, 0xa7, 0x9c, 0xcf, 0x7a, 0xf4, 0x44, 0xbc, 0x86, 0xc1, 0x27, 0x74, 0x9c, 0xd1, 0xc9, 0x26,
	0xbd, 0xb5, 0x7b, 0x74, 0x47, 0x78, 0xf3, 0x09, 0x1c, 0xd4, 0xe6, 0xb3, 0x5c, 0x5d, 0xee, 0xab,
	0xf0, 0x0d, 0xb7, 0x2b, 0x68, 0xaa, 0x73, 0x7d, 0x85, 0xff, 0x98, 0x68, 0xa7, 0x62, 0x0e, 0xf0,
	0xd1, 0xa0, 0x72, 0xc8, 0x57, 0x9a, 0x34, 0x0b, 0xbd, 0xe7, 0xdf, 0xbc, 0xf0, 0xe6, 0x02, 0x0f,
	0x34, 0xbf, 0x83, 0x51, 0x6d, 0x3e, 0xbd, 0xfd, 0x4c, 0xbb, 0xfe, 0x7f, 0xc9, 0x5b, 0x08, 0xea,
	0x12, 0xbb, 0xeb, 0x1e, 0x37, 0x84, 0x6d, 0xec, 0xc7, 0x00, 0x17, 0xe5, 0x6a, 0xef, 0xf8, 0x3b,
	0x0f, 0x70, 0x1a, 0x7c, 0xed, 0xab, 0x32, 0x3d, 0x2e, 0x93, 0xa4, 0xcf, 0xff, 0xaa, 0xf7, 0x7f,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xad, 0xfd, 0x25, 0xd8, 0xc9, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	Authorization(ctx context.Context, in *TextRequest, opts ...grpc.CallOption) (*StateReply, error)
	GetRole(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*RoleReply, error)
	GetRoleImage(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*TextReply, error)
	GetAuthToken(ctx context.Context, in *TextRequest, opts ...grpc.CallOption) (*TextReply, error)
	CreateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error)
	GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error)
	GetUserByName(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error)
	GetUsers(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UsersReply, error)
	UpdateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*StateReply, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) Authorization(ctx context.Context, in *TextRequest, opts ...grpc.CallOption) (*StateReply, error) {
	out := new(StateReply)
	err := c.cc.Invoke(ctx, "/pb.User/Authorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetRole(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*RoleReply, error) {
	out := new(RoleReply)
	err := c.cc.Invoke(ctx, "/pb.User/GetRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetRoleImage(ctx context.Context, in *RoleRequest, opts ...grpc.CallOption) (*TextReply, error) {
	out := new(TextReply)
	err := c.cc.Invoke(ctx, "/pb.User/GetRoleImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetAuthToken(ctx context.Context, in *TextRequest, opts ...grpc.CallOption) (*TextReply, error) {
	out := new(TextReply)
	err := c.cc.Invoke(ctx, "/pb.User/GetAuthToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) CreateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error) {
	out := new(UserReply)
	err := c.cc.Invoke(ctx, "/pb.User/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error) {
	out := new(UserReply)
	err := c.cc.Invoke(ctx, "/pb.User/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetUserByName(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error) {
	out := new(UserReply)
	err := c.cc.Invoke(ctx, "/pb.User/GetUserByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetUsers(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UsersReply, error) {
	out := new(UsersReply)
	err := c.cc.Invoke(ctx, "/pb.User/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) UpdateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*StateReply, error) {
	out := new(StateReply)
	err := c.cc.Invoke(ctx, "/pb.User/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	Authorization(context.Context, *TextRequest) (*StateReply, error)
	GetRole(context.Context, *RoleRequest) (*RoleReply, error)
	GetRoleImage(context.Context, *RoleRequest) (*TextReply, error)
	GetAuthToken(context.Context, *TextRequest) (*TextReply, error)
	CreateUser(context.Context, *UserRequest) (*UserReply, error)
	GetUser(context.Context, *UserRequest) (*UserReply, error)
	GetUserByName(context.Context, *UserRequest) (*UserReply, error)
	GetUsers(context.Context, *UserRequest) (*UsersReply, error)
	UpdateUser(context.Context, *UserRequest) (*StateReply, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) Authorization(ctx context.Context, req *TextRequest) (*StateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authorization not implemented")
}
func (*UnimplementedUserServer) GetRole(ctx context.Context, req *RoleRequest) (*RoleReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRole not implemented")
}
func (*UnimplementedUserServer) GetRoleImage(ctx context.Context, req *RoleRequest) (*TextReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoleImage not implemented")
}
func (*UnimplementedUserServer) GetAuthToken(ctx context.Context, req *TextRequest) (*TextReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthToken not implemented")
}
func (*UnimplementedUserServer) CreateUser(ctx context.Context, req *UserRequest) (*UserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedUserServer) GetUser(ctx context.Context, req *UserRequest) (*UserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUserServer) GetUserByName(ctx context.Context, req *UserRequest) (*UserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByName not implemented")
}
func (*UnimplementedUserServer) GetUsers(ctx context.Context, req *UserRequest) (*UsersReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (*UnimplementedUserServer) UpdateUser(ctx context.Context, req *UserRequest) (*StateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_Authorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Authorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.User/Authorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Authorization(ctx, req.(*TextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.User/GetRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetRole(ctx, req.(*RoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetRoleImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetRoleImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.User/GetRoleImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetRoleImage(ctx, req.(*RoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetAuthToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetAuthToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.User/GetAuthToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetAuthToken(ctx, req.(*TextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.User/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).CreateUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.User/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetUserByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUserByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.User/GetUserByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUserByName(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.User/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUsers(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.User/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).UpdateUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authorization",
			Handler:    _User_Authorization_Handler,
		},
		{
			MethodName: "GetRole",
			Handler:    _User_GetRole_Handler,
		},
		{
			MethodName: "GetRoleImage",
			Handler:    _User_GetRoleImage_Handler,
		},
		{
			MethodName: "GetAuthToken",
			Handler:    _User_GetAuthToken_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _User_CreateUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _User_GetUser_Handler,
		},
		{
			MethodName: "GetUserByName",
			Handler:    _User_GetUserByName_Handler,
		},
		{
			MethodName: "GetUsers",
			Handler:    _User_GetUsers_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _User_UpdateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
