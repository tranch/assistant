// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: finance.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type BillRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BillRequest) Reset()         { *m = BillRequest{} }
func (m *BillRequest) String() string { return proto.CompactTextString(m) }
func (*BillRequest) ProtoMessage()    {}
func (*BillRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{0}
}
func (m *BillRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BillRequest.Unmarshal(m, b)
}
func (m *BillRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BillRequest.Marshal(b, m, deterministic)
}
func (m *BillRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BillRequest.Merge(m, src)
}
func (m *BillRequest) XXX_Size() int {
	return xxx_messageInfo_BillRequest.Size(m)
}
func (m *BillRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BillRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BillRequest proto.InternalMessageInfo

func (m *BillRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BillRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type BillReply struct {
	Bill                 *Bill    `protobuf:"bytes,1,opt,name=bill,proto3" json:"bill,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BillReply) Reset()         { *m = BillReply{} }
func (m *BillReply) String() string { return proto.CompactTextString(m) }
func (*BillReply) ProtoMessage()    {}
func (*BillReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{1}
}
func (m *BillReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BillReply.Unmarshal(m, b)
}
func (m *BillReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BillReply.Marshal(b, m, deterministic)
}
func (m *BillReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BillReply.Merge(m, src)
}
func (m *BillReply) XXX_Size() int {
	return xxx_messageInfo_BillReply.Size(m)
}
func (m *BillReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BillReply.DiscardUnknown(m)
}

var xxx_messageInfo_BillReply proto.InternalMessageInfo

func (m *BillReply) GetBill() *Bill {
	if m != nil {
		return m.Bill
	}
	return nil
}

type BillsReply struct {
	Bills                []*Bill  `protobuf:"bytes,1,rep,name=bills,proto3" json:"bills,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BillsReply) Reset()         { *m = BillsReply{} }
func (m *BillsReply) String() string { return proto.CompactTextString(m) }
func (*BillsReply) ProtoMessage()    {}
func (*BillsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{2}
}
func (m *BillsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BillsReply.Unmarshal(m, b)
}
func (m *BillsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BillsReply.Marshal(b, m, deterministic)
}
func (m *BillsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BillsReply.Merge(m, src)
}
func (m *BillsReply) XXX_Size() int {
	return xxx_messageInfo_BillsReply.Size(m)
}
func (m *BillsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BillsReply.DiscardUnknown(m)
}

var xxx_messageInfo_BillsReply proto.InternalMessageInfo

func (m *BillsReply) GetBills() []*Bill {
	if m != nil {
		return m.Bills
	}
	return nil
}

type Bill struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Date                 string   `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Payee                string   `protobuf:"bytes,3,opt,name=payee,proto3" json:"payee,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Amount               float32  `protobuf:"fixed32,5,opt,name=amount,proto3" json:"amount,omitempty"`
	CreatedAt            string   `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bill) Reset()         { *m = Bill{} }
func (m *Bill) String() string { return proto.CompactTextString(m) }
func (*Bill) ProtoMessage()    {}
func (*Bill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{3}
}
func (m *Bill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bill.Unmarshal(m, b)
}
func (m *Bill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bill.Marshal(b, m, deterministic)
}
func (m *Bill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bill.Merge(m, src)
}
func (m *Bill) XXX_Size() int {
	return xxx_messageInfo_Bill.Size(m)
}
func (m *Bill) XXX_DiscardUnknown() {
	xxx_messageInfo_Bill.DiscardUnknown(m)
}

var xxx_messageInfo_Bill proto.InternalMessageInfo

func (m *Bill) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Bill) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Bill) GetPayee() string {
	if m != nil {
		return m.Payee
	}
	return ""
}

func (m *Bill) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Bill) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Bill) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Bill) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type BillRecord struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BillId               int64    `protobuf:"varint,2,opt,name=bill_id,json=billId,proto3" json:"bill_id,omitempty"`
	Posting              string   `protobuf:"bytes,3,opt,name=posting,proto3" json:"posting,omitempty"`
	Amount               float32  `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BillRecord) Reset()         { *m = BillRecord{} }
func (m *BillRecord) String() string { return proto.CompactTextString(m) }
func (*BillRecord) ProtoMessage()    {}
func (*BillRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{4}
}
func (m *BillRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BillRecord.Unmarshal(m, b)
}
func (m *BillRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BillRecord.Marshal(b, m, deterministic)
}
func (m *BillRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BillRecord.Merge(m, src)
}
func (m *BillRecord) XXX_Size() int {
	return xxx_messageInfo_BillRecord.Size(m)
}
func (m *BillRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_BillRecord.DiscardUnknown(m)
}

var xxx_messageInfo_BillRecord proto.InternalMessageInfo

func (m *BillRecord) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BillRecord) GetBillId() int64 {
	if m != nil {
		return m.BillId
	}
	return 0
}

func (m *BillRecord) GetPosting() string {
	if m != nil {
		return m.Posting
	}
	return ""
}

func (m *BillRecord) GetAmount() float32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type Assets struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId            int64    `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Category             string   `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Balance              float32  `protobuf:"fixed32,5,opt,name=balance,proto3" json:"balance,omitempty"`
	CreatedAt            string   `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Assets) Reset()         { *m = Assets{} }
func (m *Assets) String() string { return proto.CompactTextString(m) }
func (*Assets) ProtoMessage()    {}
func (*Assets) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{5}
}
func (m *Assets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Assets.Unmarshal(m, b)
}
func (m *Assets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Assets.Marshal(b, m, deterministic)
}
func (m *Assets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Assets.Merge(m, src)
}
func (m *Assets) XXX_Size() int {
	return xxx_messageInfo_Assets.Size(m)
}
func (m *Assets) XXX_DiscardUnknown() {
	xxx_messageInfo_Assets.DiscardUnknown(m)
}

var xxx_messageInfo_Assets proto.InternalMessageInfo

func (m *Assets) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Assets) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Assets) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Assets) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Assets) GetBalance() float32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Assets) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type Account struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Balance              float32  `protobuf:"fixed32,3,opt,name=balance,proto3" json:"balance,omitempty"`
	CreatedAt            string   `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{6}
}
func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account) GetBalance() float32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Account) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

type FundReply struct {
	Code                          string    `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                          string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                          string    `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	NetWorth                      float64   `protobuf:"fixed64,4,opt,name=net_worth,json=netWorth,proto3" json:"net_worth,omitempty"`
	ExpectWorth                   float64   `protobuf:"fixed64,5,opt,name=expect_worth,json=expectWorth,proto3" json:"expect_worth,omitempty"`
	TotalWorth                    float64   `protobuf:"fixed64,6,opt,name=total_worth,json=totalWorth,proto3" json:"total_worth,omitempty"`
	ExpectGrowth                  string    `protobuf:"bytes,7,opt,name=expect_growth,json=expectGrowth,proto3" json:"expect_growth,omitempty"`
	DayGrowth                     string    `protobuf:"bytes,8,opt,name=day_growth,json=dayGrowth,proto3" json:"day_growth,omitempty"`
	LastWeekGrowth                string    `protobuf:"bytes,9,opt,name=last_week_growth,json=lastWeekGrowth,proto3" json:"last_week_growth,omitempty"`
	LastMonthGrowth               string    `protobuf:"bytes,10,opt,name=last_month_growth,json=lastMonthGrowth,proto3" json:"last_month_growth,omitempty"`
	LastThreeMonthsGrowth         string    `protobuf:"bytes,11,opt,name=last_three_months_growth,json=lastThreeMonthsGrowth,proto3" json:"last_three_months_growth,omitempty"`
	LastSixMonthsGrowth           string    `protobuf:"bytes,12,opt,name=last_six_months_growth,json=lastSixMonthsGrowth,proto3" json:"last_six_months_growth,omitempty"`
	LastYearGrowth                string    `protobuf:"bytes,13,opt,name=last_year_growth,json=lastYearGrowth,proto3" json:"last_year_growth,omitempty"`
	BuyMin                        string    `protobuf:"bytes,14,opt,name=buy_min,json=buyMin,proto3" json:"buy_min,omitempty"`
	BuySourceRate                 string    `protobuf:"bytes,15,opt,name=buy_source_rate,json=buySourceRate,proto3" json:"buy_source_rate,omitempty"`
	BuyRate                       string    `protobuf:"bytes,16,opt,name=buy_rate,json=buyRate,proto3" json:"buy_rate,omitempty"`
	Manager                       string    `protobuf:"bytes,17,opt,name=manager,proto3" json:"manager,omitempty"`
	FundScale                     string    `protobuf:"bytes,18,opt,name=fund_scale,json=fundScale,proto3" json:"fund_scale,omitempty"`
	NetWorthDate                  string    `protobuf:"bytes,19,opt,name=net_worth_date,json=netWorthDate,proto3" json:"net_worth_date,omitempty"`
	ExpectWorthDate               string    `protobuf:"bytes,20,opt,name=expect_worth_date,json=expectWorthDate,proto3" json:"expect_worth_date,omitempty"`
	NetWorthDataDate              []string  `protobuf:"bytes,21,rep,name=net_worth_data_date,json=netWorthDataDate,proto3" json:"net_worth_data_date,omitempty"`
	NetWorthDataUnit              []float64 `protobuf:"fixed64,22,rep,packed,name=net_worth_data_unit,json=netWorthDataUnit,proto3" json:"net_worth_data_unit,omitempty"`
	NetWorthDataIncrease          []float64 `protobuf:"fixed64,23,rep,packed,name=net_worth_data_increase,json=netWorthDataIncrease,proto3" json:"net_worth_data_increase,omitempty"`
	MillionCopiesIncomeDataDate   []string  `protobuf:"bytes,24,rep,name=million_copies_income_data_date,json=millionCopiesIncomeDataDate,proto3" json:"million_copies_income_data_date,omitempty"`
	MillionCopiesIncomeDataIncome []float64 `protobuf:"fixed64,25,rep,packed,name=million_copies_income_data_income,json=millionCopiesIncomeDataIncome,proto3" json:"million_copies_income_data_income,omitempty"`
	MillionCopiesIncomeDate       string    `protobuf:"bytes,26,opt,name=million_copies_income_date,json=millionCopiesIncomeDate,proto3" json:"million_copies_income_date,omitempty"`
	SevenDaysYearIncome           float64   `protobuf:"fixed64,27,opt,name=seven_days_year_income,json=sevenDaysYearIncome,proto3" json:"seven_days_year_income,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}  `json:"-"`
	XXX_unrecognized              []byte    `json:"-"`
	XXX_sizecache                 int32     `json:"-"`
}

func (m *FundReply) Reset()         { *m = FundReply{} }
func (m *FundReply) String() string { return proto.CompactTextString(m) }
func (*FundReply) ProtoMessage()    {}
func (*FundReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{7}
}
func (m *FundReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FundReply.Unmarshal(m, b)
}
func (m *FundReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FundReply.Marshal(b, m, deterministic)
}
func (m *FundReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FundReply.Merge(m, src)
}
func (m *FundReply) XXX_Size() int {
	return xxx_messageInfo_FundReply.Size(m)
}
func (m *FundReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FundReply.DiscardUnknown(m)
}

var xxx_messageInfo_FundReply proto.InternalMessageInfo

func (m *FundReply) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *FundReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FundReply) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FundReply) GetNetWorth() float64 {
	if m != nil {
		return m.NetWorth
	}
	return 0
}

func (m *FundReply) GetExpectWorth() float64 {
	if m != nil {
		return m.ExpectWorth
	}
	return 0
}

func (m *FundReply) GetTotalWorth() float64 {
	if m != nil {
		return m.TotalWorth
	}
	return 0
}

func (m *FundReply) GetExpectGrowth() string {
	if m != nil {
		return m.ExpectGrowth
	}
	return ""
}

func (m *FundReply) GetDayGrowth() string {
	if m != nil {
		return m.DayGrowth
	}
	return ""
}

func (m *FundReply) GetLastWeekGrowth() string {
	if m != nil {
		return m.LastWeekGrowth
	}
	return ""
}

func (m *FundReply) GetLastMonthGrowth() string {
	if m != nil {
		return m.LastMonthGrowth
	}
	return ""
}

func (m *FundReply) GetLastThreeMonthsGrowth() string {
	if m != nil {
		return m.LastThreeMonthsGrowth
	}
	return ""
}

func (m *FundReply) GetLastSixMonthsGrowth() string {
	if m != nil {
		return m.LastSixMonthsGrowth
	}
	return ""
}

func (m *FundReply) GetLastYearGrowth() string {
	if m != nil {
		return m.LastYearGrowth
	}
	return ""
}

func (m *FundReply) GetBuyMin() string {
	if m != nil {
		return m.BuyMin
	}
	return ""
}

func (m *FundReply) GetBuySourceRate() string {
	if m != nil {
		return m.BuySourceRate
	}
	return ""
}

func (m *FundReply) GetBuyRate() string {
	if m != nil {
		return m.BuyRate
	}
	return ""
}

func (m *FundReply) GetManager() string {
	if m != nil {
		return m.Manager
	}
	return ""
}

func (m *FundReply) GetFundScale() string {
	if m != nil {
		return m.FundScale
	}
	return ""
}

func (m *FundReply) GetNetWorthDate() string {
	if m != nil {
		return m.NetWorthDate
	}
	return ""
}

func (m *FundReply) GetExpectWorthDate() string {
	if m != nil {
		return m.ExpectWorthDate
	}
	return ""
}

func (m *FundReply) GetNetWorthDataDate() []string {
	if m != nil {
		return m.NetWorthDataDate
	}
	return nil
}

func (m *FundReply) GetNetWorthDataUnit() []float64 {
	if m != nil {
		return m.NetWorthDataUnit
	}
	return nil
}

func (m *FundReply) GetNetWorthDataIncrease() []float64 {
	if m != nil {
		return m.NetWorthDataIncrease
	}
	return nil
}

func (m *FundReply) GetMillionCopiesIncomeDataDate() []string {
	if m != nil {
		return m.MillionCopiesIncomeDataDate
	}
	return nil
}

func (m *FundReply) GetMillionCopiesIncomeDataIncome() []float64 {
	if m != nil {
		return m.MillionCopiesIncomeDataIncome
	}
	return nil
}

func (m *FundReply) GetMillionCopiesIncomeDate() string {
	if m != nil {
		return m.MillionCopiesIncomeDate
	}
	return ""
}

func (m *FundReply) GetSevenDaysYearIncome() float64 {
	if m != nil {
		return m.SevenDaysYearIncome
	}
	return 0
}

type StockReply struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	PriceChange          string   `protobuf:"bytes,4,opt,name=price_change,json=priceChange,proto3" json:"price_change,omitempty"`
	ChangePercent        string   `protobuf:"bytes,5,opt,name=change_percent,json=changePercent,proto3" json:"change_percent,omitempty"`
	Open                 string   `protobuf:"bytes,6,opt,name=open,proto3" json:"open,omitempty"`
	Close                string   `protobuf:"bytes,7,opt,name=close,proto3" json:"close,omitempty"`
	Price                string   `protobuf:"bytes,8,opt,name=price,proto3" json:"price,omitempty"`
	High                 string   `protobuf:"bytes,9,opt,name=high,proto3" json:"high,omitempty"`
	Low                  string   `protobuf:"bytes,10,opt,name=low,proto3" json:"low,omitempty"`
	Volume               string   `protobuf:"bytes,11,opt,name=volume,proto3" json:"volume,omitempty"`
	Turnover             string   `protobuf:"bytes,12,opt,name=turnover,proto3" json:"turnover,omitempty"`
	TurnoverRate         string   `protobuf:"bytes,13,opt,name=turnover_rate,json=turnoverRate,proto3" json:"turnover_rate,omitempty"`
	TotalWorth           string   `protobuf:"bytes,14,opt,name=total_worth,json=totalWorth,proto3" json:"total_worth,omitempty"`
	CirculationWorth     string   `protobuf:"bytes,15,opt,name=circulation_worth,json=circulationWorth,proto3" json:"circulation_worth,omitempty"`
	Date                 string   `protobuf:"bytes,16,opt,name=date,proto3" json:"date,omitempty"`
	Buy                  []string `protobuf:"bytes,17,rep,name=buy,proto3" json:"buy,omitempty"`
	Sell                 []string `protobuf:"bytes,18,rep,name=sell,proto3" json:"sell,omitempty"`
	Pb                   string   `protobuf:"bytes,19,opt,name=pb,proto3" json:"pb,omitempty"`
	Spe                  string   `protobuf:"bytes,20,opt,name=spe,proto3" json:"spe,omitempty"`
	Pe                   string   `protobuf:"bytes,21,opt,name=pe,proto3" json:"pe,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StockReply) Reset()         { *m = StockReply{} }
func (m *StockReply) String() string { return proto.CompactTextString(m) }
func (*StockReply) ProtoMessage()    {}
func (*StockReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_c04e2e1c1ba79a81, []int{8}
}
func (m *StockReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StockReply.Unmarshal(m, b)
}
func (m *StockReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StockReply.Marshal(b, m, deterministic)
}
func (m *StockReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StockReply.Merge(m, src)
}
func (m *StockReply) XXX_Size() int {
	return xxx_messageInfo_StockReply.Size(m)
}
func (m *StockReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StockReply.DiscardUnknown(m)
}

var xxx_messageInfo_StockReply proto.InternalMessageInfo

func (m *StockReply) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *StockReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StockReply) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *StockReply) GetPriceChange() string {
	if m != nil {
		return m.PriceChange
	}
	return ""
}

func (m *StockReply) GetChangePercent() string {
	if m != nil {
		return m.ChangePercent
	}
	return ""
}

func (m *StockReply) GetOpen() string {
	if m != nil {
		return m.Open
	}
	return ""
}

func (m *StockReply) GetClose() string {
	if m != nil {
		return m.Close
	}
	return ""
}

func (m *StockReply) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *StockReply) GetHigh() string {
	if m != nil {
		return m.High
	}
	return ""
}

func (m *StockReply) GetLow() string {
	if m != nil {
		return m.Low
	}
	return ""
}

func (m *StockReply) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *StockReply) GetTurnover() string {
	if m != nil {
		return m.Turnover
	}
	return ""
}

func (m *StockReply) GetTurnoverRate() string {
	if m != nil {
		return m.TurnoverRate
	}
	return ""
}

func (m *StockReply) GetTotalWorth() string {
	if m != nil {
		return m.TotalWorth
	}
	return ""
}

func (m *StockReply) GetCirculationWorth() string {
	if m != nil {
		return m.CirculationWorth
	}
	return ""
}

func (m *StockReply) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *StockReply) GetBuy() []string {
	if m != nil {
		return m.Buy
	}
	return nil
}

func (m *StockReply) GetSell() []string {
	if m != nil {
		return m.Sell
	}
	return nil
}

func (m *StockReply) GetPb() string {
	if m != nil {
		return m.Pb
	}
	return ""
}

func (m *StockReply) GetSpe() string {
	if m != nil {
		return m.Spe
	}
	return ""
}

func (m *StockReply) GetPe() string {
	if m != nil {
		return m.Pe
	}
	return ""
}

func init() {
	proto.RegisterType((*BillRequest)(nil), "pb.BillRequest")
	proto.RegisterType((*BillReply)(nil), "pb.BillReply")
	proto.RegisterType((*BillsReply)(nil), "pb.BillsReply")
	proto.RegisterType((*Bill)(nil), "pb.Bill")
	proto.RegisterType((*BillRecord)(nil), "pb.BillRecord")
	proto.RegisterType((*Assets)(nil), "pb.Assets")
	proto.RegisterType((*Account)(nil), "pb.Account")
	proto.RegisterType((*FundReply)(nil), "pb.FundReply")
	proto.RegisterType((*StockReply)(nil), "pb.StockReply")
}

func init() { proto.RegisterFile("finance.proto", fileDescriptor_c04e2e1c1ba79a81) }

var fileDescriptor_c04e2e1c1ba79a81 = []byte{
	// 1126 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xdb, 0x6e, 0xdb, 0x46,
	0x10, 0x8d, 0x2e, 0xd6, 0x65, 0x64, 0xc9, 0xf2, 0x3a, 0x89, 0x19, 0xa7, 0x69, 0x14, 0xf5, 0x02,
	0x35, 0x69, 0x1c, 0x34, 0x41, 0xd1, 0x87, 0x3e, 0x39, 0x36, 0x92, 0xfa, 0x21, 0x40, 0x21, 0xa5,
	0x08, 0xda, 0x17, 0x62, 0x49, 0x8e, 0x25, 0xc2, 0x14, 0xc9, 0x72, 0x97, 0xb6, 0xf9, 0x0d, 0xfd,
	0x89, 0x3e, 0xf5, 0x1b, 0xfa, 0x29, 0xfd, 0x9c, 0x62, 0x66, 0x97, 0x12, 0x7d, 0x4b, 0x5b, 0xf4,
	0x6d, 0xe6, 0xcc, 0x99, 0xd9, 0x59, 0x72, 0x2e, 0x0b, 0xfd, 0x93, 0x30, 0x96, 0xb1, 0x8f, 0xfb,
	0x69, 0x96, 0xe8, 0x44, 0xd4, 0x53, 0x6f, 0x0f, 0x3c, 0xa9, 0xac, 0x3e, 0xfe, 0x06, 0x7a, 0xaf,
	0xc3, 0x28, 0x9a, 0xe2, 0xaf, 0x39, 0x2a, 0x2d, 0x06, 0x50, 0x0f, 0x03, 0xa7, 0x36, 0xaa, 0x4d,
	0x1a, 0xd3, 0x7a, 0x18, 0x08, 0x01, 0xcd, 0x58, 0x2e, 0xd1, 0xa9, 0x8f, 0x6a, 0x93, 0xee, 0x94,
	0xe5, 0xf1, 0x57, 0xd0, 0x35, 0x2e, 0x69, 0x54, 0x88, 0x4f, 0xa0, 0xe9, 0x85, 0x51, 0xc4, 0x2e,
	0xbd, 0x97, 0x9d, 0xfd, 0xd4, 0xdb, 0x67, 0x23, 0xa3, 0xe3, 0xaf, 0x01, 0x48, 0x53, 0x86, 0xfb,
	0x29, 0x6c, 0x10, 0xaa, 0x9c, 0xda, 0xa8, 0x71, 0x89, 0x6c, 0xe0, 0xf1, 0x9f, 0x35, 0x68, 0x92,
	0x7e, 0x53, 0x16, 0x81, 0xd4, 0xab, 0x2c, 0x48, 0x16, 0x77, 0x61, 0x23, 0x95, 0x05, 0xa2, 0xd3,
	0x60, 0xd0, 0x28, 0x62, 0x04, 0xbd, 0x00, 0x95, 0x9f, 0x85, 0xa9, 0x0e, 0x93, 0xd8, 0x69, 0xb2,
	0xad, 0x0a, 0x89, 0xfb, 0xd0, 0x92, 0xcb, 0x24, 0x8f, 0xb5, 0xb3, 0x31, 0xaa, 0x4d, 0xea, 0x53,
	0xab, 0x89, 0x47, 0x00, 0x7e, 0x86, 0x52, 0x63, 0xe0, 0x4a, 0xed, 0xb4, 0xd8, 0xb1, 0x6b, 0x91,
	0x03, 0x36, 0xe7, 0x69, 0x50, 0x9a, 0xdb, 0xc6, 0x6c, 0x91, 0x03, 0x3d, 0x9e, 0x9b, 0x8b, 0x4e,
	0xd1, 0x4f, 0xb2, 0xe0, 0x5a, 0xfe, 0xbb, 0xd0, 0xa6, 0x1b, 0xba, 0x61, 0xc0, 0x57, 0x68, 0x4c,
	0x5b, 0xa4, 0x1e, 0x07, 0xc2, 0x81, 0x76, 0x9a, 0x28, 0x1d, 0xc6, 0x73, 0x7b, 0x8d, 0x52, 0xad,
	0xa4, 0xd9, 0xac, 0xa6, 0x39, 0xfe, 0xbd, 0x06, 0xad, 0x03, 0xa5, 0x50, 0xab, 0x6b, 0xa7, 0x3c,
	0x02, 0x90, 0xbe, 0x4f, 0xac, 0xf5, 0x41, 0x5d, 0x8b, 0x1c, 0xaf, 0x7f, 0x65, 0x63, 0xfd, 0x2b,
	0xc5, 0x1e, 0x74, 0x7c, 0xa9, 0x71, 0x9e, 0x64, 0x85, 0xfd, 0x56, 0x2b, 0x9d, 0x72, 0xf3, 0x64,
	0x44, 0xa5, 0x63, 0xbf, 0x54, 0xa9, 0xfe, 0xc3, 0xa7, 0x1a, 0x9f, 0x40, 0xfb, 0xc0, 0x9c, 0xfa,
	0x6f, 0xca, 0xa9, 0x7a, 0x4e, 0xe3, 0x63, 0xe7, 0x34, 0xaf, 0x9e, 0xf3, 0x57, 0x07, 0xba, 0x6f,
	0xf2, 0x38, 0x30, 0xc5, 0x25, 0xa0, 0xe9, 0x27, 0x01, 0xf2, 0x61, 0xdd, 0x29, 0xcb, 0x37, 0x1e,
	0x27, 0xa0, 0xa9, 0x8b, 0x74, 0xf5, 0x19, 0x48, 0x16, 0x0f, 0xa1, 0x1b, 0xa3, 0x76, 0xcf, 0x93,
	0x4c, 0x2f, 0xf8, 0x9c, 0xda, 0xb4, 0x13, 0xa3, 0xfe, 0x40, 0xba, 0x78, 0x02, 0x9b, 0x78, 0x91,
	0xa2, 0x5f, 0xda, 0x37, 0xd8, 0xde, 0x33, 0x98, 0xa1, 0x3c, 0x86, 0x9e, 0x4e, 0xb4, 0x8c, 0x2c,
	0xa3, 0xc5, 0x0c, 0x60, 0xc8, 0x10, 0x3e, 0x83, 0xbe, 0x8d, 0x31, 0xcf, 0x92, 0x73, 0xbd, 0xb0,
	0x05, 0x64, 0x03, 0xbf, 0x65, 0x8c, 0xae, 0x1b, 0xc8, 0xa2, 0x64, 0x74, 0xcc, 0x75, 0x03, 0x59,
	0x58, 0xf3, 0x04, 0x86, 0x91, 0x54, 0xda, 0x3d, 0x47, 0x3c, 0x2d, 0x49, 0x5d, 0x26, 0x0d, 0x08,
	0xff, 0x80, 0x78, 0x6a, 0x99, 0x4f, 0x61, 0x9b, 0x99, 0xcb, 0x24, 0xd6, 0x8b, 0x92, 0x0a, 0x4c,
	0xdd, 0x22, 0xc3, 0x3b, 0xc2, 0x2d, 0xf7, 0x3b, 0x70, 0x98, 0xab, 0x17, 0x19, 0xa2, 0xf1, 0x50,
	0xa5, 0x4b, 0x8f, 0x5d, 0xee, 0x91, 0xfd, 0x3d, 0x99, 0xd9, 0x4f, 0x59, 0xc7, 0x57, 0x70, 0x9f,
	0x1d, 0x55, 0x78, 0x71, 0xc5, 0x6d, 0x93, 0xdd, 0x76, 0xc8, 0x3a, 0x0b, 0x2f, 0x2e, 0x39, 0x95,
	0x77, 0x28, 0x50, 0x66, 0x25, 0xbd, 0xbf, 0xbe, 0xc3, 0xcf, 0x28, 0x33, 0xcb, 0xa4, 0x96, 0xc9,
	0x0b, 0x77, 0x19, 0xc6, 0xce, 0x80, 0x09, 0x2d, 0x2f, 0x2f, 0xde, 0x85, 0xb1, 0xf8, 0x12, 0xb6,
	0xc8, 0xa0, 0x92, 0x3c, 0xf3, 0xd1, 0xcd, 0x68, 0x2c, 0x6c, 0x31, 0xa1, 0xef, 0xe5, 0xc5, 0x8c,
	0xd1, 0x29, 0xcd, 0x87, 0x07, 0xd0, 0x21, 0x1e, 0x13, 0x86, 0xa6, 0xb7, 0xbc, 0xbc, 0x60, 0x93,
	0x03, 0xed, 0xa5, 0x8c, 0xe5, 0x1c, 0x33, 0x67, 0xdb, 0x58, 0xac, 0x4a, 0xbf, 0xe0, 0x24, 0x8f,
	0x03, 0x57, 0xf9, 0x32, 0x42, 0x47, 0x98, 0x5f, 0x40, 0xc8, 0x8c, 0x00, 0xf1, 0x39, 0x0c, 0x56,
	0x75, 0xe2, 0xf2, 0x44, 0xda, 0x31, 0xff, 0xb1, 0x2c, 0x96, 0x23, 0x0a, 0xff, 0x14, 0xb6, 0xab,
	0x05, 0x63, 0x88, 0x77, 0xcd, 0xe7, 0xaf, 0x54, 0x0d, 0x73, 0x9f, 0xc3, 0xce, 0xa5, 0x88, 0xd2,
	0xb0, 0xef, 0x8d, 0x1a, 0x93, 0xee, 0x74, 0x58, 0x09, 0x2b, 0x6f, 0xa1, 0xe7, 0x71, 0xa8, 0x9d,
	0xfb, 0xa3, 0xc6, 0xa4, 0x76, 0x99, 0xfe, 0x53, 0x1c, 0x6a, 0xf1, 0x2d, 0xec, 0x5e, 0xa1, 0x87,
	0x31, 0xf5, 0x8f, 0x42, 0x67, 0x97, 0x5d, 0xee, 0x56, 0x5d, 0x8e, 0xad, 0x4d, 0x1c, 0xc1, 0xe3,
	0x65, 0x18, 0x45, 0x61, 0x12, 0xbb, 0x7e, 0x92, 0x86, 0xa8, 0xc8, 0x2d, 0x59, 0x62, 0x25, 0x41,
	0x87, 0x13, 0x7c, 0x68, 0x69, 0x87, 0xcc, 0x3a, 0x66, 0xd2, 0x2a, 0xd7, 0x1f, 0xe0, 0xc9, 0x47,
	0xa2, 0x18, 0xd9, 0x79, 0xc0, 0x69, 0x3c, 0xba, 0x25, 0x8e, 0x91, 0xc4, 0xf7, 0xb0, 0x77, 0x6b,
	0x24, 0x74, 0xf6, 0xf8, 0xcb, 0xee, 0xde, 0x1c, 0x02, 0xa9, 0x4e, 0x15, 0x9e, 0x61, 0xec, 0x06,
	0xb2, 0x50, 0xa6, 0xf0, 0xec, 0xd9, 0x0f, 0xb9, 0x4d, 0x77, 0xd8, 0x7a, 0x24, 0x0b, 0x45, 0xd5,
	0x67, 0x1c, 0xc7, 0xbf, 0x35, 0x01, 0x66, 0x3a, 0xf1, 0x4f, 0xff, 0xff, 0x6c, 0x79, 0x02, 0x9b,
	0x69, 0x16, 0xfa, 0xe8, 0xfa, 0x0b, 0x19, 0xcf, 0xb1, 0x5c, 0x49, 0x8c, 0x1d, 0x32, 0x24, 0xbe,
	0x80, 0x81, 0x31, 0xba, 0x29, 0x66, 0x3e, 0xda, 0xd5, 0xd4, 0x9d, 0xf6, 0x0d, 0xfa, 0xa3, 0x01,
	0x29, 0x7a, 0x92, 0x62, 0x6c, 0x07, 0x2e, 0xcb, 0xb4, 0x05, 0xfd, 0x28, 0x51, 0x68, 0x07, 0x8a,
	0x51, 0x78, 0x37, 0x52, 0x7c, 0x3b, 0x44, 0x8c, 0x42, 0xfe, 0x8b, 0x70, 0x5e, 0x0e, 0x0d, 0x96,
	0xc5, 0x10, 0x1a, 0x51, 0x72, 0x6e, 0x87, 0x03, 0x89, 0xb4, 0x78, 0xce, 0x92, 0x28, 0x5f, 0xa2,
	0x6d, 0x7f, 0xab, 0xd1, 0xaa, 0xd0, 0x79, 0x16, 0x27, 0x67, 0x98, 0xd9, 0x0e, 0x5f, 0xe9, 0x34,
	0xde, 0x4a, 0xd9, 0x34, 0x9c, 0xe9, 0xe9, 0xcd, 0x12, 0xe4, 0xae, 0xbb, 0x32, 0x24, 0x4d, 0x57,
	0x57, 0x87, 0xe4, 0x33, 0xd8, 0xf6, 0xc3, 0xcc, 0xcf, 0x23, 0x49, 0x8b, 0xda, 0xd2, 0x4c, 0x6f,
	0x0f, 0x2b, 0x06, 0x43, 0x2e, 0x9f, 0x04, 0xc3, 0xca, 0x93, 0x60, 0x08, 0x0d, 0x2f, 0x2f, 0x9c,
	0x6d, 0xae, 0x4d, 0x12, 0x89, 0xa5, 0x30, 0x8a, 0x1c, 0xc1, 0x10, 0xcb, 0xb4, 0x93, 0x52, 0xcf,
	0x36, 0x6e, 0x3d, 0xf5, 0xc8, 0x4b, 0xa5, 0x65, 0x83, 0x92, 0xc8, 0x0c, 0xea, 0x41, 0xc3, 0xc0,
	0x97, 0x7f, 0xd4, 0x01, 0xde, 0x98, 0x57, 0xd4, 0xec, 0xcc, 0x17, 0x2f, 0x00, 0x0e, 0x79, 0x09,
	0xf1, 0x5b, 0x65, 0x6b, 0xf5, 0x8a, 0x31, 0x4f, 0xa8, 0xbd, 0x01, 0x01, 0x33, 0x2d, 0x35, 0x72,
	0xf1, 0x8c, 0xef, 0x88, 0x67, 0xd0, 0x7e, 0x8b, 0xfa, 0x66, 0x76, 0x7f, 0x0d, 0x18, 0xf2, 0x73,
	0xe8, 0x58, 0xb2, 0xba, 0x25, 0xf6, 0xfa, 0x45, 0x35, 0xbe, 0x43, 0xc9, 0x1c, 0x61, 0x84, 0xff,
	0x35, 0x19, 0xda, 0x9b, 0x86, 0xfd, 0x1e, 0x2f, 0xf4, 0xa5, 0x64, 0x56, 0x2b, 0x75, 0x95, 0x0c,
	0x77, 0xc2, 0x75, 0xb6, 0x8d, 0x5d, 0x76, 0xc9, 0xf8, 0xce, 0xeb, 0xce, 0x2f, 0x2d, 0x99, 0x86,
	0x2f, 0x52, 0xcf, 0x6b, 0xf1, 0xeb, 0xf2, 0xd5, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x62, 0x91,
	0x35, 0x0f, 0x7e, 0x0a, 0x00, 0x00,
}
