// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: message.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MessageRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageRequest) Reset()         { *m = MessageRequest{} }
func (m *MessageRequest) String() string { return proto.CompactTextString(m) }
func (*MessageRequest) ProtoMessage()    {}
func (*MessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}
func (m *MessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageRequest.Unmarshal(m, b)
}
func (m *MessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageRequest.Marshal(b, m, deterministic)
}
func (m *MessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageRequest.Merge(m, src)
}
func (m *MessageRequest) XXX_Size() int {
	return xxx_messageInfo_MessageRequest.Size(m)
}
func (m *MessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MessageRequest proto.InternalMessageInfo

func (m *MessageRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MessageRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *MessageRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type MessageReply struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Text                 []string `protobuf:"bytes,3,rep,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageReply) Reset()         { *m = MessageReply{} }
func (m *MessageReply) String() string { return proto.CompactTextString(m) }
func (*MessageReply) ProtoMessage()    {}
func (*MessageReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}
func (m *MessageReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageReply.Unmarshal(m, b)
}
func (m *MessageReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageReply.Marshal(b, m, deterministic)
}
func (m *MessageReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageReply.Merge(m, src)
}
func (m *MessageReply) XXX_Size() int {
	return xxx_messageInfo_MessageReply.Size(m)
}
func (m *MessageReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageReply.DiscardUnknown(m)
}

var xxx_messageInfo_MessageReply proto.InternalMessageInfo

func (m *MessageReply) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MessageReply) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *MessageReply) GetText() []string {
	if m != nil {
		return m.Text
	}
	return nil
}

type MessageListReply struct {
	Messages             []*MessageItem `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MessageListReply) Reset()         { *m = MessageListReply{} }
func (m *MessageListReply) String() string { return proto.CompactTextString(m) }
func (*MessageListReply) ProtoMessage()    {}
func (*MessageListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{2}
}
func (m *MessageListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageListReply.Unmarshal(m, b)
}
func (m *MessageListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageListReply.Marshal(b, m, deterministic)
}
func (m *MessageListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageListReply.Merge(m, src)
}
func (m *MessageListReply) XXX_Size() int {
	return xxx_messageInfo_MessageListReply.Size(m)
}
func (m *MessageListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageListReply.DiscardUnknown(m)
}

var xxx_messageInfo_MessageListReply proto.InternalMessageInfo

func (m *MessageListReply) GetMessages() []*MessageItem {
	if m != nil {
		return m.Messages
	}
	return nil
}

type MessageItem struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Time                 string   `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageItem) Reset()         { *m = MessageItem{} }
func (m *MessageItem) String() string { return proto.CompactTextString(m) }
func (*MessageItem) ProtoMessage()    {}
func (*MessageItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{3}
}
func (m *MessageItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageItem.Unmarshal(m, b)
}
func (m *MessageItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageItem.Marshal(b, m, deterministic)
}
func (m *MessageItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageItem.Merge(m, src)
}
func (m *MessageItem) XXX_Size() int {
	return xxx_messageInfo_MessageItem.Size(m)
}
func (m *MessageItem) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageItem.DiscardUnknown(m)
}

var xxx_messageInfo_MessageItem proto.InternalMessageInfo

func (m *MessageItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MessageItem) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *MessageItem) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *MessageItem) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MessageItem) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func init() {
	proto.RegisterType((*MessageRequest)(nil), "pb.MessageRequest")
	proto.RegisterType((*MessageReply)(nil), "pb.MessageReply")
	proto.RegisterType((*MessageListReply)(nil), "pb.MessageListReply")
	proto.RegisterType((*MessageItem)(nil), "pb.MessageItem")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0xdd, 0xb4, 0xd6, 0x75, 0xd6, 0xad, 0x4b, 0xf0, 0x10, 0xf6, 0x54, 0x7a, 0x2a, 0xfe,
	0xa9, 0x52, 0x1f, 0x40, 0x50, 0xf1, 0x0f, 0xe8, 0xa5, 0xeb, 0xc9, 0x5b, 0x4b, 0x07, 0x09, 0x6c,
	0x76, 0xe3, 0x26, 0x85, 0xed, 0xfb, 0xf8, 0xa0, 0x92, 0x36, 0x84, 0x8a, 0x15, 0xd4, 0xdb, 0xe4,
	0x97, 0x6f, 0xbe, 0x99, 0x2f, 0x04, 0xa6, 0x02, 0x95, 0x2a, 0xde, 0x30, 0x95, 0x9b, 0xb5, 0x5e,
	0x53, 0x22, 0xcb, 0x39, 0x94, 0x85, 0xb2, 0xe7, 0xf8, 0x01, 0xc2, 0xe7, 0x4e, 0x90, 0xe3, 0x7b,
	0x8d, 0x4a, 0xd3, 0x10, 0x08, 0xaf, 0xd8, 0x28, 0x1a, 0x25, 0x5e, 0x4e, 0x78, 0x45, 0x29, 0xf8,
	0x75, 0xcd, 0x2b, 0x46, 0xa2, 0x51, 0xb2, 0x9f, 0xb7, 0xb5, 0x61, 0x1a, 0xb7, 0x9a, 0x79, 0x1d,
	0x33, 0x75, 0x7c, 0x07, 0x07, 0xce, 0x49, 0x2e, 0x9b, 0x3f, 0xfa, 0x78, 0xce, 0xe7, 0x0a, 0x66,
	0xd6, 0xe7, 0x89, 0x2b, 0xdd, 0x79, 0x9d, 0xc0, 0xd8, 0xc6, 0x50, 0x8c, 0x44, 0x5e, 0x32, 0xc9,
	0x0e, 0x53, 0x59, 0xa6, 0x56, 0xf7, 0xa8, 0x51, 0xe4, 0x4e, 0x10, 0x0b, 0x98, 0xf4, 0x2e, 0xfe,
	0x9b, 0xa7, 0x65, 0x8d, 0x44, 0xe6, 0x5b, 0xd6, 0x48, 0x6c, 0x19, 0x17, 0xc8, 0x76, 0x2d, 0xe3,
	0x02, 0xb3, 0x0f, 0x02, 0x7b, 0x76, 0x1e, 0xcd, 0xc0, 0x37, 0x4b, 0x53, 0xda, 0xdb, 0xce, 0xbe,
	0xeb, 0xfc, 0xa8, 0xc7, 0x5c, 0xb2, 0x78, 0x87, 0x1e, 0x83, 0x77, 0x8f, 0xc3, 0x2d, 0x53, 0xc3,
	0x5e, 0x70, 0xeb, 0xb4, 0x17, 0x10, 0xdc, 0x6c, 0xb0, 0xd0, 0x38, 0x28, 0x9f, 0x7d, 0x61, 0x5d,
	0xc7, 0x19, 0x04, 0xb7, 0xb8, 0xc4, 0x1f, 0x3a, 0xbe, 0x0d, 0x38, 0x05, 0x7f, 0x81, 0xab, 0x6a,
	0x50, 0x1c, 0x1a, 0xb6, 0xd0, 0x85, 0xc6, 0xde, 0xea, 0x79, 0xbd, 0xfa, 0x95, 0xf3, 0xf5, 0xf8,
	0x35, 0x28, 0x24, 0x3f, 0x97, 0x65, 0x19, 0xb4, 0x3f, 0xef, 0xf2, 0x33, 0x00, 0x00, 0xff, 0xff,
	0xcb, 0x18, 0x30, 0x08, 0x9a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessageClient is the client API for Message service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageClient interface {
	List(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageListReply, error)
	Get(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*TextReply, error)
	Create(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageReply, error)
	Delete(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*TextReply, error)
	Send(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*StateReply, error)
	Run(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*TextReply, error)
}

type messageClient struct {
	cc *grpc.ClientConn
}

func NewMessageClient(cc *grpc.ClientConn) MessageClient {
	return &messageClient{cc}
}

func (c *messageClient) List(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageListReply, error) {
	out := new(MessageListReply)
	err := c.cc.Invoke(ctx, "/pb.Message/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) Get(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*TextReply, error) {
	out := new(TextReply)
	err := c.cc.Invoke(ctx, "/pb.Message/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) Create(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*MessageReply, error) {
	out := new(MessageReply)
	err := c.cc.Invoke(ctx, "/pb.Message/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) Delete(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*TextReply, error) {
	out := new(TextReply)
	err := c.cc.Invoke(ctx, "/pb.Message/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) Send(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*StateReply, error) {
	out := new(StateReply)
	err := c.cc.Invoke(ctx, "/pb.Message/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageClient) Run(ctx context.Context, in *MessageRequest, opts ...grpc.CallOption) (*TextReply, error) {
	out := new(TextReply)
	err := c.cc.Invoke(ctx, "/pb.Message/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessageServer is the server API for Message service.
type MessageServer interface {
	List(context.Context, *MessageRequest) (*MessageListReply, error)
	Get(context.Context, *MessageRequest) (*TextReply, error)
	Create(context.Context, *MessageRequest) (*MessageReply, error)
	Delete(context.Context, *MessageRequest) (*TextReply, error)
	Send(context.Context, *MessageRequest) (*StateReply, error)
	Run(context.Context, *MessageRequest) (*TextReply, error)
}

// UnimplementedMessageServer can be embedded to have forward compatible implementations.
type UnimplementedMessageServer struct {
}

func (*UnimplementedMessageServer) List(ctx context.Context, req *MessageRequest) (*MessageListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedMessageServer) Get(ctx context.Context, req *MessageRequest) (*TextReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedMessageServer) Create(ctx context.Context, req *MessageRequest) (*MessageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedMessageServer) Delete(ctx context.Context, req *MessageRequest) (*TextReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedMessageServer) Send(ctx context.Context, req *MessageRequest) (*StateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}
func (*UnimplementedMessageServer) Run(ctx context.Context, req *MessageRequest) (*TextReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}

func RegisterMessageServer(s *grpc.Server, srv MessageServer) {
	s.RegisterService(&_Message_serviceDesc, srv)
}

func _Message_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Message/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).List(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Message/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).Get(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Message/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).Create(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Message/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).Delete(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Message/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).Send(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Message_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Message/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServer).Run(ctx, req.(*MessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Message_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Message",
	HandlerType: (*MessageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Message_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Message_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Message_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Message_Delete_Handler,
		},
		{
			MethodName: "Send",
			Handler:    _Message_Send_Handler,
		},
		{
			MethodName: "Run",
			Handler:    _Message_Run_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}
