name: Tests

on:
  push:
    branches:
      - '*'
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      nats:
        image: nats:latest
        ports:
          - 4222:4222
          - 6222:6222
          - 8222:8222
      redis:
        image: redis:latest
        ports:
          - 6379:6379
      consul:
        image: bitnami/consul:latest
        ports:
          - 8500:8500
          - 8600:8600/tcp
          - 8600:8600/udp

    env:
      DB_DATABASE: assistant
      DB_USER: root
      DB_PASSWORD: root
      DB_HOST: localhost

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16

      - name: Get dependencies
        run: go mod download

      - name: Setup MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'SHOW VARIABLES LIKE "%version%";' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
          mysql -e 'SHOW DATABASES;' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
          mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} ${{ env.DB_DATABASE }} < ./scripts/app.sql
          mysql -e 'use ${{ env.DB_DATABASE }};SHOW TABLES;' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      - name: Copy Config
        run: |
          cp configs/common.yml.example configs/common.yml
          cp configs/gateway.yml.example configs/gateway.yml
          cp configs/web.yml.example configs/web.yml
          cp configs/classifier.yml.example configs/classifier.yml
          ls -all configs

      - name: Init config data
        run: go run ./test/load.go

      - name: Run test cases
        run: |
          export CONSUL_ADDRESS=127.0.0.1:8500
          go test -race -cover -coverprofile=./coverage.out -timeout=10m -short github.com/tsundata/assistant/internal/...
          go tool cover -func ./coverage.out

      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)
