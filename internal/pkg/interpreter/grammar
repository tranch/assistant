program : "program" variable ";" block "."

block : declarations compound_statement

declarations : ( "var" ( variable_declaration ";" )+ )* procedure_declaration*

variable_declaration : ID ( "," ID )* ":" type_spec

procedure_declaration : "procedure" ID ( "(" formal_parameter_list ")" )? ";" block ";"

formal_params_list : formal_parameters
				   | formal_parameters ";" formal_parameter_list

formal_parameters : ID ( "," ID )* ":" type_spec

type_spec : INTEGER | REAL

compound_statement : "begin" statement_list "end"

statement_list : statement
			   | statement ";" statement_list

statement : compound_statement
		  | proccall_statement
		  | assignment_statement
		  | if_statement
		  | while_statement
		  | empty

while_statement : "while" expression "do" statement "end"

if_statement : "if" expression "then" statement ( "else" statement )? "end"

expression : logic_or

logic_or : logic_and ( "or" logic_and )*

logic_and : equality ( "and" equality )*

equality : comparison ( ( "!=" | "==" ) comparison )*

comparison : expr ( ( ">" | ">=" | "<" | "<=" ) expr )*

proccall_statement : ID "(" ( expr ( "," expr )* )? ")"

assignment_statement : variable ":=" expr

empty :

expr : term ( ( "+" | "-" ) term )*

term : factor ( ( "*" | "DIV" | "/" ) factor )*

factor : "+" factor
       | "-" factor
       | INTEGER_CONST
       | REAL_CONST
       | "(" expr ")"
       | variable

variable : ID
