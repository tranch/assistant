// Code generated by mockery v2.8.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	inside "github.com/tsundata/assistant/internal/app/workflow/action/inside"
)

// Opcoder is an autogenerated mock type for the Opcoder type
type Opcoder struct {
	mock.Mock
}

// Doc provides a mock function with given fields:
func (_m *Opcoder) Doc() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Run provides a mock function with given fields: ctx, params
func (_m *Opcoder) Run(ctx *inside.Context, params []interface{}) (interface{}, error) {
	ret := _m.Called(ctx, params)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(*inside.Context, []interface{}) interface{}); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*inside.Context, []interface{}) error); ok {
		r1 = rf(ctx, params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Type provides a mock function with given fields:
func (_m *Opcoder) Type() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}
