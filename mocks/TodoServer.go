// Code generated by mockery v2.8.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	pb "github.com/tsundata/assistant/api/pb"
)

// TodoServer is an autogenerated mock type for the TodoServer type
type TodoServer struct {
	mock.Mock
}

// CompleteTodo provides a mock function with given fields: _a0, _a1
func (_m *TodoServer) CompleteTodo(_a0 context.Context, _a1 *pb.TodoRequest) (*pb.StateReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.StateReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TodoRequest) *pb.StateReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.StateReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TodoRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateTodo provides a mock function with given fields: _a0, _a1
func (_m *TodoServer) CreateTodo(_a0 context.Context, _a1 *pb.TodoRequest) (*pb.StateReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.StateReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TodoRequest) *pb.StateReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.StateReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TodoRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteTodo provides a mock function with given fields: _a0, _a1
func (_m *TodoServer) DeleteTodo(_a0 context.Context, _a1 *pb.TodoRequest) (*pb.StateReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.StateReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TodoRequest) *pb.StateReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.StateReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TodoRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTodo provides a mock function with given fields: _a0, _a1
func (_m *TodoServer) GetTodo(_a0 context.Context, _a1 *pb.TodoRequest) (*pb.TodoReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.TodoReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TodoRequest) *pb.TodoReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.TodoReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TodoRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTodos provides a mock function with given fields: _a0, _a1
func (_m *TodoServer) GetTodos(_a0 context.Context, _a1 *pb.TodoRequest) (*pb.TodosReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.TodosReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TodoRequest) *pb.TodosReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.TodosReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TodoRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateTodo provides a mock function with given fields: _a0, _a1
func (_m *TodoServer) UpdateTodo(_a0 context.Context, _a1 *pb.TodoRequest) (*pb.StateReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.StateReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TodoRequest) *pb.StateReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.StateReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TodoRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
