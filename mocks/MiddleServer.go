// Code generated by mockery v2.8.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	pb "github.com/tsundata/assistant/api/pb"
)

// MiddleServer is an autogenerated mock type for the MiddleServer type
type MiddleServer struct {
	mock.Mock
}

// CreateCredential provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) CreateCredential(_a0 context.Context, _a1 *pb.KVsRequest) (*pb.StateReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.StateReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.KVsRequest) *pb.StateReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.StateReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.KVsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreatePage provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) CreatePage(_a0 context.Context, _a1 *pb.PageRequest) (*pb.TextReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.TextReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.PageRequest) *pb.TextReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.TextReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.PageRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CreateSetting provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) CreateSetting(_a0 context.Context, _a1 *pb.KVRequest) (*pb.StateReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.StateReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.KVRequest) *pb.StateReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.StateReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.KVRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetApps provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) GetApps(_a0 context.Context, _a1 *pb.TextRequest) (*pb.AppsReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.AppsReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TextRequest) *pb.AppsReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.AppsReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TextRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAvailableApp provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) GetAvailableApp(_a0 context.Context, _a1 *pb.TextRequest) (*pb.AppReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.AppReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TextRequest) *pb.AppReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.AppReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TextRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCredential provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) GetCredential(_a0 context.Context, _a1 *pb.CredentialRequest) (*pb.CredentialReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.CredentialReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.CredentialRequest) *pb.CredentialReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.CredentialReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.CredentialRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCredentials provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) GetCredentials(_a0 context.Context, _a1 *pb.TextRequest) (*pb.CredentialsReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.CredentialsReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TextRequest) *pb.CredentialsReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.CredentialsReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TextRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMaskingCredentials provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) GetMaskingCredentials(_a0 context.Context, _a1 *pb.TextRequest) (*pb.MaskingReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.MaskingReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TextRequest) *pb.MaskingReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.MaskingReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TextRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMenu provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) GetMenu(_a0 context.Context, _a1 *pb.TextRequest) (*pb.TextReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.TextReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TextRequest) *pb.TextReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.TextReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TextRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPage provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) GetPage(_a0 context.Context, _a1 *pb.PageRequest) (*pb.PageReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.PageReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.PageRequest) *pb.PageReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.PageReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.PageRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetQrUrl provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) GetQrUrl(_a0 context.Context, _a1 *pb.TextRequest) (*pb.TextReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.TextReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TextRequest) *pb.TextReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.TextReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TextRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSetting provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) GetSetting(_a0 context.Context, _a1 *pb.TextRequest) (*pb.SettingReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.SettingReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TextRequest) *pb.SettingReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.SettingReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TextRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSettings provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) GetSettings(_a0 context.Context, _a1 *pb.TextRequest) (*pb.SettingsReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.SettingsReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TextRequest) *pb.SettingsReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.SettingsReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TextRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetStats provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) GetStats(_a0 context.Context, _a1 *pb.TextRequest) (*pb.TextReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.TextReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.TextRequest) *pb.TextReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.TextReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.TextRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// StoreAppOAuth provides a mock function with given fields: _a0, _a1
func (_m *MiddleServer) StoreAppOAuth(_a0 context.Context, _a1 *pb.AppRequest) (*pb.StateReply, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.StateReply
	if rf, ok := ret.Get(0).(func(context.Context, *pb.AppRequest) *pb.StateReply); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.StateReply)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.AppRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
