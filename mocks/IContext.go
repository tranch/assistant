// Code generated by mockery v2.8.0. DO NOT EDIT.

package mocks

import (
	config "github.com/tsundata/assistant/internal/pkg/config"
	logger "github.com/tsundata/assistant/internal/pkg/logger"

	mock "github.com/stretchr/testify/mock"

	pb "github.com/tsundata/assistant/api/pb"

	redis "github.com/go-redis/redis/v8"
)

// IContext is an autogenerated mock type for the IContext type
type IContext struct {
	mock.Mock
}

// GetConfig provides a mock function with given fields:
func (_m *IContext) GetConfig() *config.AppConfig {
	ret := _m.Called()

	var r0 *config.AppConfig
	if rf, ok := ret.Get(0).(func() *config.AppConfig); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*config.AppConfig)
		}
	}

	return r0
}

// GetLogger provides a mock function with given fields:
func (_m *IContext) GetLogger() *logger.Logger {
	ret := _m.Called()

	var r0 *logger.Logger
	if rf, ok := ret.Get(0).(func() *logger.Logger); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*logger.Logger)
		}
	}

	return r0
}

// GetRedis provides a mock function with given fields:
func (_m *IContext) GetRedis() *redis.Client {
	ret := _m.Called()

	var r0 *redis.Client
	if rf, ok := ret.Get(0).(func() *redis.Client); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*redis.Client)
		}
	}

	return r0
}

// Message provides a mock function with given fields:
func (_m *IContext) Message() pb.MessageClient {
	ret := _m.Called()

	var r0 pb.MessageClient
	if rf, ok := ret.Get(0).(func() pb.MessageClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pb.MessageClient)
		}
	}

	return r0
}

// Middle provides a mock function with given fields:
func (_m *IContext) Middle() pb.MiddleClient {
	ret := _m.Called()

	var r0 pb.MiddleClient
	if rf, ok := ret.Get(0).(func() pb.MiddleClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pb.MiddleClient)
		}
	}

	return r0
}

// NLP provides a mock function with given fields:
func (_m *IContext) NLP() pb.NLPClient {
	ret := _m.Called()

	var r0 pb.NLPClient
	if rf, ok := ret.Get(0).(func() pb.NLPClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pb.NLPClient)
		}
	}

	return r0
}

// Storage provides a mock function with given fields:
func (_m *IContext) Storage() pb.StorageClient {
	ret := _m.Called()

	var r0 pb.StorageClient
	if rf, ok := ret.Get(0).(func() pb.StorageClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pb.StorageClient)
		}
	}

	return r0
}

// Subscribe provides a mock function with given fields:
func (_m *IContext) Subscribe() pb.SubscribeClient {
	ret := _m.Called()

	var r0 pb.SubscribeClient
	if rf, ok := ret.Get(0).(func() pb.SubscribeClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pb.SubscribeClient)
		}
	}

	return r0
}

// Todo provides a mock function with given fields:
func (_m *IContext) Todo() pb.TodoClient {
	ret := _m.Called()

	var r0 pb.TodoClient
	if rf, ok := ret.Get(0).(func() pb.TodoClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pb.TodoClient)
		}
	}

	return r0
}

// User provides a mock function with given fields:
func (_m *IContext) User() pb.UserClient {
	ret := _m.Called()

	var r0 pb.UserClient
	if rf, ok := ret.Get(0).(func() pb.UserClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pb.UserClient)
		}
	}

	return r0
}

// Workflow provides a mock function with given fields:
func (_m *IContext) Workflow() pb.WorkflowClient {
	ret := _m.Called()

	var r0 pb.WorkflowClient
	if rf, ok := ret.Get(0).(func() pb.WorkflowClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pb.WorkflowClient)
		}
	}

	return r0
}
